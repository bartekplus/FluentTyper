on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/v}
      - name: Set env
        run: |
          echo $SOURCE_NAME
          echo $SOURCE_BRANCH
          echo $SOURCE_TAG
        env:
          SOURCE_NAME: ${{ steps.branch_name.outputs.SOURCE_NAME }}
          SOURCE_BRANCH: ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}
      - name: Install jq and fix csp for Firefox
        run: |
          sudo apt-get install -y jq moreutils
      - name: Prepare chrome files
        run: |
          mkdir -p chrome
          cp -rdf src/* chrome/
          cp -rdf platform/chrome/* chrome
          jq ".version = \"${SOURCE_TAG}\"" chrome/manifest.json | sponge chrome/manifest.json
        env:
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}
      - name: Zip Release
        uses: TheDoctor0/zip-release@v0.3.0
        with:
          filename: 'FluentTyperChrome.zip'
          directory: 'chrome'
      - name: Prepare firefox files
        run: |
          mkdir -p firefox
          cp -rdf src/* firefox/
          cp -rdf platform/firefox/* firefox
          jq ".version = \"${SOURCE_TAG}\"" firefox/manifest.json | sponge firefox/manifest.json
        env:
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}
      - name: Zip Release for Firefox
        uses: TheDoctor0/zip-release@v0.3.0
        with:
          filename: 'FluentTyperFirefox.zip'
          directory: 'firefox'
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Chrome Asset
        id: upload-release-asset-chrome
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./chrome/FluentTyperChrome.zip
          asset_name: FluentTyperChrome.zip
          asset_content_type: application/zip
      - name: Upload Release Firefox Asset
        id: upload-release-asset-firefox
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./firefox/FluentTyperFirefox.zip
          asset_name: FluentTyperFirefox.zip
          asset_content_type: application/zip
