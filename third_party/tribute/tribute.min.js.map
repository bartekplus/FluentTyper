{"version":3,"file":"tribute.min.js","sources":["../src/utils.js","../src/TributeEvents.js","../src/TributeMenuEvents.js","../src/TributeRange.js","../src/TributeSearch.js","../src/Tribute.js"],"sourcesContent":["if (!Array.prototype.find) {\n    Array.prototype.find = function(predicate) {\n        if (this === null) {\n            throw new TypeError('Array.prototype.find called on null or undefined')\n        }\n        if (typeof predicate !== 'function') {\n            throw new TypeError('predicate must be a function')\n        }\n        var list = Object(this)\n        var length = list.length >>> 0\n        var thisArg = arguments[1]\n        var value\n\n        for (var i = 0; i < length; i++) {\n            value = list[i]\n            if (predicate.call(thisArg, value, i, list)) {\n                return value\n            }\n        }\n        return undefined\n    }\n}\n\nif (window && typeof window.CustomEvent !== \"function\") {\n  function CustomEvent(event, params) {\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: undefined\n    }\n    var evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail)\n    return evt\n  }\n\n if (typeof window.Event !== 'undefined') {\n   CustomEvent.prototype = window.Event.prototype\n }\n\n  window.CustomEvent = CustomEvent\n}","class TributeEvents {\n  constructor(tribute) {\n    this.tribute = tribute;\n    this.tribute.events = this;\n  }\n\n  static keys() {\n    return [{\n        key: 9,\n        value: \"TAB\"\n      },\n      {\n        key: 8,\n        value: \"DELETE\"\n      },\n      {\n        key: 27,\n        value: \"ESCAPE\"\n      },\n      {\n        key: 38,\n        value: \"UP\"\n      },\n      {\n        key: 40,\n        value: \"DOWN\"\n      }\n    ];\n  }\n\n  static modifiers() {\n    return [\n      \"CapsLock\",\n      \"Control\",\n      \"Fn\",\n      \"Hyper\",\n      \"Meta\",\n      \"OS\",\n      \"Super\",\n      \"Symbol\",\n      \"Win\"\n    ];\n  }\n\n  bind(element) {\n    element.boundKeydown = this.keydown.bind(element, this);\n    element.boundKeyup = this.keyup.bind(element, this);\n    element.boundInput = this.input.bind(element, this);\n\n    element.addEventListener(\"keydown\", element.boundKeydown, false);\n    element.addEventListener(\"keyup\", element.boundKeyup, false);\n    element.addEventListener(\"input\", element.boundInput, false);\n  }\n\n  unbind(element) {\n    element.removeEventListener(\"keydown\", element.boundKeydown, false);\n    element.removeEventListener(\"keyup\", element.boundKeyup, false);\n    element.removeEventListener(\"input\", element.boundInput, false);\n\n    delete element.boundKeydown;\n    delete element.boundKeyup;\n    delete element.boundInput;\n  }\n\n  keydown(instance, event) {\n    if (instance.shouldDeactivate(event)) {\n      instance.tribute.isActive = false;\n      instance.tribute.hideMenu();\n    }\n\n    let element = this;\n    instance.commandEvent = false;\n\n    if (event instanceof KeyboardEvent) {\n      TributeEvents.modifiers().forEach(o => {\n        if (event.getModifierState(o)) {\n          instance.commandEvent = true;\n          return;\n        }\n      });\n    }\n\n    TributeEvents.keys().forEach(o => {\n      if (o.key === event.keyCode) {\n        instance.commandEvent = true;\n        instance.callbacks()[o.value.toLowerCase()](event, element);\n      }\n    });\n  }\n\n  input(instance, event) {\n    instance.inputEvent = event instanceof CustomEvent ? false : true;\n    instance.commandEvent = !instance.inputEvent;\n    instance.keyup.call(this, instance, event);\n  }\n\n  click(instance, event) {\n    let tribute = instance.tribute;\n    if (tribute.menu && tribute.menu.contains(event.target)) {\n      let li = event.target;\n      event.preventDefault();\n      event.stopPropagation();\n      while (li.nodeName.toLowerCase() !== \"li\") {\n        li = li.parentNode;\n        if (!li || li === tribute.menu) {\n          throw new Error(\"cannot find the <li> container for the click\");\n        }\n      }\n      tribute.selectItemAtIndex(li.getAttribute(\"data-index\"), event);\n      tribute.hideMenu();\n\n      // TODO: should fire with externalTrigger and target is outside of menu\n    } else if (tribute.current.element && !tribute.current.externalTrigger) {\n      tribute.current.externalTrigger = false;\n      setTimeout(() => tribute.hideMenu());\n    }\n  }\n\n  keyup(instance, event) {\n    if (instance.inputEvent) {\n      instance.inputEvent = false;\n    }\n    instance.updateSelection(this);\n\n    if (event instanceof KeyboardEvent) {\n      TributeEvents.modifiers().forEach(o => {\n        if (event.getModifierState(o)) {\n          instance.commandEvent = true;\n          return;\n        }\n      });\n    }\n\n    if (event.keyCode === 27) return;\n\n    if (!instance.tribute.allowSpaces && instance.tribute.hasTrailingSpace) {\n      instance.tribute.hasTrailingSpace = false;\n      instance.commandEvent = true;\n      instance.callbacks()[\"space\"](event, this);\n      return;\n    }\n\n    if (!instance.tribute.isActive) {\n      if (instance.tribute.autocompleteMode) {\n        instance.callbacks().triggerChar(event, this, \"\");\n      } else {\n        let keyCode = instance.getKeyCode(instance, this, event);\n\n        if (isNaN(keyCode) || !keyCode) return;\n\n        let trigger = instance.tribute.triggers().find(trigger => {\n          return trigger.charCodeAt(0) === keyCode;\n        });\n\n        if (typeof trigger !== \"undefined\") {\n          instance.callbacks().triggerChar(event, this, trigger);\n        }\n      }\n    }\n\n    if (\n      instance.tribute.current.mentionText.length <\n      instance.tribute.current.collection.menuShowMinLength\n    ) {\n      return;\n    }\n\n    if (\n      ((instance.tribute.current.trigger ||\n          instance.tribute.autocompleteMode) &&\n        instance.commandEvent === false) ||\n      (instance.tribute.isActive && event.keyCode === 8)\n    ) {\n      instance.tribute.showMenuFor(this, true);\n    }\n  }\n\n  shouldDeactivate(event) {\n    if (!this.tribute.isActive) return false;\n\n    if (this.tribute.current.mentionText.length === 0) {\n      let eventKeyPressed = false;\n      TributeEvents.keys().forEach(o => {\n        if (event.keyCode === o.key) eventKeyPressed = true;\n      });\n\n      return !eventKeyPressed;\n    }\n\n    return false;\n  }\n\n  getKeyCode(instance, el, event) {\n    let char;\n    let tribute = instance.tribute;\n    let info = tribute.range.getTriggerInfo(\n      false,\n      tribute.hasTrailingSpace,\n      true,\n      tribute.allowSpaces,\n      tribute.autocompleteMode\n    );\n\n    if (info) {\n      return info.mentionTriggerChar.charCodeAt(0);\n    } else {\n      return false;\n    }\n  }\n\n  updateSelection(el) {\n    this.tribute.current.element = el;\n    let info = this.tribute.range.getTriggerInfo(\n      false,\n      this.tribute.hasTrailingSpace,\n      true,\n      this.tribute.allowSpaces,\n      this.tribute.autocompleteMode\n    );\n\n    if (info) {\n      this.tribute.current.selectedPath = info.mentionSelectedPath;\n      this.tribute.current.mentionText = info.mentionText;\n      this.tribute.current.fullText = info.fullText;\n      this.tribute.current.selectedOffset = info.mentionSelectedOffset;\n    }\n  }\n\n  callbacks() {\n    return {\n      triggerChar: (e, el, trigger) => {\n        let tribute = this.tribute;\n        tribute.current.trigger = trigger;\n\n        let collectionItem = tribute.collection.find(item => {\n          return item.trigger === trigger;\n        });\n\n        tribute.current.collection = collectionItem;\n\n        if (\n          tribute.current.mentionText.length >=\n          tribute.current.collection.menuShowMinLength &&\n          tribute.inputEvent\n        ) {\n          tribute.showMenuFor(el, true);\n        }\n      },\n      enter: (e, el) => {\n        // choose selection\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          setTimeout(() => {\n            this.tribute.selectItemAtIndex(this.tribute.menuSelected, e);\n            this.tribute.hideMenu();\n          }, 0);\n        }\n      },\n      escape: (e, el) => {\n        if (this.tribute.isActive) {\n          e.preventDefault();\n          e.stopPropagation();\n          this.tribute.isActive = false;\n          this.tribute.hideMenu();\n        }\n      },\n      tab: (e, el) => {\n        // choose first match\n        this.callbacks().enter(e, el);\n      },\n      space: (e, el) => {\n        if (this.tribute.isActive) {\n          if (this.tribute.spaceSelectsMatch) {\n            this.callbacks().enter(e, el);\n          } else if (!this.tribute.allowSpaces) {\n            e.stopPropagation();\n            setTimeout(() => {\n              this.tribute.hideMenu();\n              this.tribute.isActive = false;\n            }, 0);\n          }\n        }\n      },\n      up: (e, el) => {\n        // navigate up ul\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          let count = this.tribute.current.filteredItems.length,\n            selected = this.tribute.menuSelected;\n\n          if (count > selected && selected > 0) {\n            this.tribute.menuSelected--;\n            this.setActiveLi();\n          } else if (selected === 0) {\n            this.tribute.menuSelected = count - 1;\n            this.setActiveLi();\n            this.tribute.menu.scrollTop = this.tribute.menu.scrollHeight;\n          }\n        }\n      },\n      down: (e, el) => {\n        // navigate down ul\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          let count = this.tribute.current.filteredItems.length - 1,\n            selected = this.tribute.menuSelected;\n\n          if (count > selected) {\n            this.tribute.menuSelected++;\n            this.setActiveLi();\n          } else if (count === selected) {\n            this.tribute.menuSelected = 0;\n            this.setActiveLi();\n            this.tribute.menu.scrollTop = 0;\n          }\n        }\n      },\n      delete: (e, el) => {\n        if (\n          this.tribute.isActive &&\n          this.tribute.current.mentionText.length < 1\n        ) {\n          this.tribute.hideMenu();\n        } else if (this.tribute.isActive) {\n          this.tribute.showMenuFor(el);\n        }\n      }\n    };\n  }\n\n  setActiveLi(index) {\n    let lis = this.tribute.menu.querySelectorAll(\"li\"),\n      length = lis.length >>> 0;\n\n    if (index) this.tribute.menuSelected = parseInt(index);\n\n    for (let i = 0; i < length; i++) {\n      let li = lis[i];\n      if (i === this.tribute.menuSelected) {\n        li.classList.add(this.tribute.current.collection.selectClass);\n\n        let liClientRect = li.getBoundingClientRect();\n        let menuClientRect = this.tribute.menu.getBoundingClientRect();\n\n        if (liClientRect.bottom > menuClientRect.bottom) {\n          let scrollDistance = liClientRect.bottom - menuClientRect.bottom;\n          this.tribute.menu.scrollTop += scrollDistance;\n        } else if (liClientRect.top < menuClientRect.top) {\n          let scrollDistance = menuClientRect.top - liClientRect.top;\n          this.tribute.menu.scrollTop -= scrollDistance;\n        }\n      } else {\n        li.classList.remove(this.tribute.current.collection.selectClass);\n      }\n    }\n  }\n\n  getFullHeight(elem, includeMargin) {\n    let height = elem.getBoundingClientRect().height;\n\n    if (includeMargin) {\n      let style = elem.currentStyle || window.getComputedStyle(elem);\n      return (\n        height + parseFloat(style.marginTop) + parseFloat(style.marginBottom)\n      );\n    }\n\n    return height;\n  }\n}\n\nexport default TributeEvents;","class TributeMenuEvents {\n  constructor(tribute) {\n    this.tribute = tribute;\n    this.tribute.menuEvents = this;\n    this.menu = this.tribute.menu;\n  }\n\n  bind(menu) {\n    this.menuClickEvent = this.tribute.events.click.bind(null, this);\n    this.menuContainerScrollEvent = this.debounce(\n      () => {\n        if (this.tribute.isActive) {\n          this.tribute.showMenuFor(this.tribute.current.element, false);\n        }\n      },\n      300,\n      false\n    );\n    this.windowResizeEvent = this.debounce(\n      () => {\n        if (this.tribute.isActive) {\n          this.tribute.range.positionMenuAtCaret(true);\n        }\n      },\n      300,\n      false\n    );\n\n    // fixes IE11 issues with mousedown\n    this.tribute.range\n      .getDocument()\n      .addEventListener(\"MSPointerDown\", this.menuClickEvent, false);\n    this.tribute.range\n      .getDocument()\n      .addEventListener(\"mousedown\", this.menuClickEvent, false);\n    window.addEventListener(\"resize\", this.windowResizeEvent);\n\n    if (this.menuContainer) {\n      this.menuContainer.addEventListener(\n        \"scroll\",\n        this.menuContainerScrollEvent,\n        false\n      );\n    } else {\n      window.addEventListener(\"scroll\", this.menuContainerScrollEvent);\n    }\n  }\n\n  unbind(menu) {\n    this.tribute.range\n      .getDocument()\n      .removeEventListener(\"mousedown\", this.menuClickEvent, false);\n    this.tribute.range\n      .getDocument()\n      .removeEventListener(\"MSPointerDown\", this.menuClickEvent, false);\n    window.removeEventListener(\"resize\", this.windowResizeEvent);\n\n    if (this.menuContainer) {\n      this.menuContainer.removeEventListener(\n        \"scroll\",\n        this.menuContainerScrollEvent,\n        false\n      );\n    } else {\n      window.removeEventListener(\"scroll\", this.menuContainerScrollEvent);\n    }\n  }\n\n  debounce(func, wait, immediate) {\n    var timeout;\n    return () => {\n      var context = this,\n        args = arguments;\n      var later = () => {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  }\n}\n\nexport default TributeMenuEvents;\n","// Thanks to https://github.com/jeff-collins/ment.io\nimport \"./utils\";\n\nclass TributeRange {\n    constructor(tribute) {\n        this.tribute = tribute\n        this.tribute.range = this\n    }\n\n    getDocument() {\n        let iframe\n        if (this.tribute.current.collection) {\n            iframe = this.tribute.current.collection.iframe\n        }\n\n        if (!iframe) {\n            return document\n        }\n\n        return iframe.contentWindow.document\n    }\n\n    positionMenuAtCaret(scrollTo) {\n        let context = this.tribute.current,\n            coordinates\n\n        let info = this.getTriggerInfo(false, this.tribute.hasTrailingSpace, true, this.tribute.allowSpaces, this.tribute.autocompleteMode)\n\n        if (typeof info !== 'undefined') {\n\n            if(!this.tribute.positionMenu){\n                this.tribute.menu.style.cssText = `display: block;`\n                return\n            }\n\n            if (!this.isContentEditable(context.element)) {\n                coordinates = this.getTextAreaOrInputUnderlinePosition(this.tribute.current.element,\n                    info.mentionPosition)\n            }\n            else {\n                coordinates = this.getContentEditableCaretPosition(info.mentionPosition)\n            }\n\n            this.tribute.menu.style.cssText = `top: ${coordinates.top}px;\n                                     left: ${coordinates.left}px;\n                                     right: ${coordinates.right}px;\n                                     bottom: ${coordinates.bottom}px;\n                                     position: absolute;\n                                     display: block;`\n\n            if (coordinates.left === 'auto') {\n                this.tribute.menu.style.left = 'auto'\n            }\n\n            if (coordinates.top === 'auto') {\n                this.tribute.menu.style.top = 'auto'\n            }\n\n            if (scrollTo) this.scrollIntoView()\n\n            window.setTimeout(() => {\n                let menuDimensions = {\n                   width: this.tribute.menu.offsetWidth,\n                   height: this.tribute.menu.offsetHeight\n                }\n                let menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\n\n                let menuIsOffScreenHorizontally = window.innerWidth > menuDimensions.width && (menuIsOffScreen.left || menuIsOffScreen.right)\n                let menuIsOffScreenVertically = window.innerHeight > menuDimensions.height && (menuIsOffScreen.top || menuIsOffScreen.bottom)\n                if (menuIsOffScreenHorizontally || menuIsOffScreenVertically) {\n                    this.tribute.menu.style.cssText = 'display: none'\n                    this.positionMenuAtCaret(scrollTo)\n                }\n            }, 0)\n\n        } else {\n            this.tribute.menu.style.cssText = 'display: none'\n        }\n    }\n\n    get menuContainerIsBody() {\n        return this.tribute.menuContainer === document.body || !this.tribute.menuContainer;\n    }\n\n\n    selectElement(targetElement, path, offset) {\n        let range\n        let elem = targetElement\n\n        if (path) {\n            for (var i = 0; i < path.length; i++) {\n                elem = elem.childNodes[path[i]]\n                if (elem === undefined) {\n                    return\n                }\n                while (elem.length < offset) {\n                    offset -= elem.length\n                    elem = elem.nextSibling\n                }\n                if (elem.childNodes.length === 0 && !elem.length) {\n                    elem = elem.previousSibling\n                }\n            }\n        }\n        let sel = this.getWindowSelection()\n\n        range = this.getDocument().createRange()\n        range.setStart(elem, offset)\n        range.setEnd(elem, offset)\n        range.collapse(true)\n\n        try {\n            sel.removeAllRanges()\n        } catch (error) {}\n\n        sel.addRange(range)\n        targetElement.focus()\n    }\n\n    replaceTriggerText(text, requireLeadingSpace, hasTrailingSpace, originalEvent, item) {\n        let info = this.getTriggerInfo(true, hasTrailingSpace, requireLeadingSpace, this.tribute.allowSpaces, this.tribute.autocompleteMode)\n\n        if (info !== undefined) {\n            let context = this.tribute.current\n            let replaceEvent = new CustomEvent('tribute-replaced', {\n                detail: {\n                    item: item,\n                    instance: context,\n                    context: info,\n                    event: originalEvent,\n                }\n            })\n\n            if (!this.isContentEditable(context.element)) {\n                let myField = this.tribute.current.element\n                let textSuffix = typeof this.tribute.replaceTextSuffix == 'string'\n                    ? this.tribute.replaceTextSuffix\n                    : ' '\n                text += textSuffix\n                let startPos = info.mentionPosition\n                let endPos = info.mentionPosition + info.mentionText.length + textSuffix.length\n                if (!this.tribute.autocompleteMode) {\n                    endPos += info.mentionTriggerChar.length - 1\n                }\n                myField.value = myField.value.substring(0, startPos) + text +\n                    myField.value.substring(endPos, myField.value.length)\n                myField.selectionStart = startPos + text.length\n                myField.selectionEnd = startPos + text.length\n            } else {\n                // add a space to the end of the pasted text\n                let textSuffix = typeof this.tribute.replaceTextSuffix == 'string'\n                    ? this.tribute.replaceTextSuffix\n                    : '\\xA0'\n                text += textSuffix\n                let endPos = info.mentionPosition + info.mentionText.length\n                if (!this.tribute.autocompleteMode) {\n                    endPos += info.mentionTriggerChar.length\n                }\n                this.pasteHtml(text, info.mentionPosition, endPos)\n            }\n\n            context.element.dispatchEvent(new CustomEvent('input', { bubbles: true }))\n            context.element.dispatchEvent(replaceEvent)\n        }\n    }\n\n    pasteHtml(html, startPos, endPos) {\n        let range, sel\n        sel = this.getWindowSelection()\n        range = this.getDocument().createRange()\n\n        sel.anchorNode.nodeValue = sel.anchorNode.nodeValue.substring(0, startPos)\n            + html + sel.anchorNode.nodeValue.substring(endPos, sel.anchorNode.nodeValue.length)\n        range.setStart(sel.anchorNode, startPos + html.length)\n        range.collapse(true)\n        sel.removeAllRanges()\n        sel.addRange(range)\n    }\n\n    getWindowSelection() {\n        if (this.tribute.collection.iframe) {\n            return this.tribute.collection.iframe.contentWindow.getSelection()\n        }\n\n        return window.getSelection()\n    }\n\n    getNodePositionInParent(element) {\n        if (element.parentNode === null) {\n            return 0\n        }\n\n        for (var i = 0; i < element.parentNode.childNodes.length; i++) {\n            let node = element.parentNode.childNodes[i]\n\n            if (node === element) {\n                return i\n            }\n        }\n    }\n\n    getContentEditableSelectedPath(ctx) {\n        let sel = this.getWindowSelection()\n        let selected = sel.anchorNode\n        let path = []\n        let offset\n\n        if (selected != null) {\n            let i\n            let ce = selected.contentEditable\n            while (selected !== null && ce !== 'true') {\n                i = this.getNodePositionInParent(selected)\n                path.push(i)\n                selected = selected.parentNode\n                if (selected !== null) {\n                    ce = selected.contentEditable\n                }\n            }\n            path.reverse()\n\n            // getRangeAt may not exist, need alternative\n            offset = sel.getRangeAt(0).startOffset\n\n            return {\n                selected: selected,\n                path: path,\n                offset: offset\n            }\n        }\n    }\n\n    getTextPrecedingCurrentSelection() {\n        let context = this.tribute.current,\n            text = ''\n\n        if (!this.isContentEditable(context.element)) {\n            let textComponent = this.tribute.current.element;\n            if (textComponent) {\n                let startPos = textComponent.selectionStart\n                if (textComponent.value && startPos >= 0) {\n                    text = textComponent.value.substring(0, startPos)\n                }\n            }\n\n        } else {\n            let selectedElem = this.getWindowSelection().anchorNode\n\n            if (selectedElem != null) {\n                let workingNodeContent = selectedElem.textContent\n                let selectStartOffset = this.getWindowSelection().getRangeAt(0).startOffset\n\n                if (workingNodeContent && selectStartOffset >= 0) {\n                    text = workingNodeContent.substring(0, selectStartOffset)\n                }\n            }\n        }\n\n        return text\n    }\n\n    getLastWordInText(text) {\n        text = text.replace(/\\u00A0/g, ' '); // https://stackoverflow.com/questions/29850407/how-do-i-replace-unicode-character-u00a0-with-a-space-in-javascript\n        var wordsArray;\n        if (this.tribute.autocompleteSeparator) {\n            wordsArray = text.split(this.tribute.autocompleteSeparator);\n        } else {\n            wordsArray = text.split(/\\s+/);\n        }\n        var worldsCount = wordsArray.length - 1;\n        return wordsArray[worldsCount].trim();\n    }\n\n    getTriggerInfo(menuAlreadyActive, hasTrailingSpace, requireLeadingSpace, allowSpaces, isAutocomplete) {\n        let ctx = this.tribute.current\n        let selected, path, offset\n\n        if (!this.isContentEditable(ctx.element)) {\n            selected = this.tribute.current.element\n        } else {\n            let selectionInfo = this.getContentEditableSelectedPath(ctx)\n\n            if (selectionInfo) {\n                selected = selectionInfo.selected\n                path = selectionInfo.path\n                offset = selectionInfo.offset\n            }\n        }\n\n        let effectiveRange = this.getTextPrecedingCurrentSelection()\n        let lastWordOfEffectiveRange = this.getLastWordInText(effectiveRange)\n\n        if (isAutocomplete) {\n            return {\n                mentionPosition: effectiveRange.length - lastWordOfEffectiveRange.length,\n                mentionText: lastWordOfEffectiveRange,\n                fullText: effectiveRange,\n                mentionSelectedElement: selected,\n                mentionSelectedPath: path,\n                mentionSelectedOffset: offset\n            }\n        }\n\n        if (effectiveRange !== undefined && effectiveRange !== null) {\n            let mostRecentTriggerCharPos = -1\n            let triggerChar\n\n            this.tribute.collection.forEach(config => {\n                let c = config.trigger\n                let idx = config.requireLeadingSpace ?\n                    this.lastIndexWithLeadingSpace(effectiveRange, c) :\n                    effectiveRange.lastIndexOf(c)\n\n                if (idx > mostRecentTriggerCharPos) {\n                    mostRecentTriggerCharPos = idx\n                    triggerChar = c\n                    requireLeadingSpace = config.requireLeadingSpace\n                }\n            })\n\n            if (mostRecentTriggerCharPos >= 0 &&\n                (\n                    mostRecentTriggerCharPos === 0 ||\n                    !requireLeadingSpace ||\n                    /[\\xA0\\s]/g.test(\n                        effectiveRange.substring(\n                            mostRecentTriggerCharPos - 1,\n                            mostRecentTriggerCharPos)\n                    )\n                )\n            ) {\n                let currentTriggerSnippet = effectiveRange.substring(mostRecentTriggerCharPos + triggerChar.length,\n                    effectiveRange.length)\n\n                triggerChar = effectiveRange.substring(mostRecentTriggerCharPos, mostRecentTriggerCharPos + triggerChar.length)\n                let firstSnippetChar = currentTriggerSnippet.substring(0, 1)\n                let leadingSpace = currentTriggerSnippet.length > 0 &&\n                    (\n                        firstSnippetChar === ' ' ||\n                        firstSnippetChar === '\\xA0'\n                    )\n                if (hasTrailingSpace) {\n                    currentTriggerSnippet = currentTriggerSnippet.trim()\n                }\n\n                let regex = allowSpaces ? /[^\\S ]/g : /[\\xA0\\s]/g;\n\n                this.tribute.hasTrailingSpace = regex.test(currentTriggerSnippet);\n\n                if (!leadingSpace && (menuAlreadyActive || !(regex.test(currentTriggerSnippet)))) {\n                    return {\n                        mentionPosition: mostRecentTriggerCharPos,\n                        mentionText: currentTriggerSnippet,\n                        mentionSelectedElement: selected,\n                        mentionSelectedPath: path,\n                        mentionSelectedOffset: offset,\n                        mentionTriggerChar: triggerChar\n                    }\n                }\n            }\n        }\n    }\n\n    lastIndexWithLeadingSpace (str, trigger) {\n        let reversedStr = str.split('').reverse().join('')\n        let index = -1\n\n        for (let cidx = 0, len = str.length; cidx < len; cidx++) {\n            let firstChar = cidx === str.length - 1\n            let leadingSpace = /\\s/.test(reversedStr[cidx + 1])\n\n            let match = true\n            for (let triggerIdx = trigger.length - 1; triggerIdx >= 0; triggerIdx--) {\n              if (trigger[triggerIdx] !== reversedStr[cidx-triggerIdx]) {\n                match = false\n                break\n              }\n            }\n\n            if (match && (firstChar || leadingSpace)) {\n                index = str.length - 1 - cidx\n                break\n            }\n        }\n\n        return index\n    }\n\n    isContentEditable(element) {\n        return element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA'\n    }\n\n    isMenuOffScreen(coordinates, menuDimensions) {\n        let windowWidth = window.innerWidth\n        let windowHeight = window.innerHeight\n        let doc = document.documentElement\n        let windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0)\n        let windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\n\n        let menuTop = typeof coordinates.top === 'number' ? coordinates.top : windowTop + windowHeight - coordinates.bottom - menuDimensions.height\n        let menuRight = typeof coordinates.right === 'number' ? coordinates.right : coordinates.left + menuDimensions.width\n        let menuBottom = typeof coordinates.bottom === 'number' ? coordinates.bottom : coordinates.top + menuDimensions.height\n        let menuLeft = typeof coordinates.left === 'number' ? coordinates.left : windowLeft + windowWidth - coordinates.right - menuDimensions.width\n\n        return {\n            top: menuTop < Math.floor(windowTop),\n            right: menuRight > Math.ceil(windowLeft + windowWidth),\n            bottom: menuBottom > Math.ceil(windowTop + windowHeight),\n            left: menuLeft < Math.floor(windowLeft)\n        }\n    }\n\n    getMenuDimensions() {\n        // Width of the menu depends of its contents and position\n        // We must check what its width would be without any obstruction\n        // This way, we can achieve good positioning for flipping the menu\n        let dimensions = {\n            width: null,\n            height: null\n        }\n\n        this.tribute.menu.style.cssText = `top: 0px;\n                                 left: 0px;\n                                 position: fixed;\n                                 display: block;\n                                 visibility; hidden;`\n       dimensions.width = this.tribute.menu.offsetWidth\n       dimensions.height = this.tribute.menu.offsetHeight\n\n       this.tribute.menu.style.cssText = `display: none;`\n\n       return dimensions\n    }\n\n    getTextAreaOrInputUnderlinePosition(element, position, flipped) {\n        let properties = ['direction', 'boxSizing', 'width', 'height', 'overflowX',\n            'overflowY', 'borderTopWidth', 'borderRightWidth',\n            'borderBottomWidth', 'borderLeftWidth', 'paddingTop',\n            'paddingRight', 'paddingBottom', 'paddingLeft',\n            'fontStyle', 'fontVariant', 'fontWeight', 'fontStretch',\n            'fontSize', 'fontSizeAdjust', 'lineHeight', 'fontFamily',\n            'textAlign', 'textTransform', 'textIndent',\n            'textDecoration', 'letterSpacing', 'wordSpacing'\n        ]\n\n        let isFirefox = (window.mozInnerScreenX !== null)\n\n        let div = this.getDocument().createElement('div')\n        div.id = 'input-textarea-caret-position-mirror-div'\n        this.getDocument().body.appendChild(div)\n\n        let style = div.style\n        let computed = window.getComputedStyle ? getComputedStyle(element) : element.currentStyle\n\n        style.whiteSpace = 'pre-wrap'\n        if (element.nodeName !== 'INPUT') {\n            style.wordWrap = 'break-word'\n        }\n\n        // position off-screen\n        style.position = 'absolute'\n        style.visibility = 'hidden'\n\n        // transfer the element's properties to the div\n        properties.forEach(prop => {\n            style[prop] = computed[prop]\n        })\n\n        if (isFirefox) {\n            style.width = `${(parseInt(computed.width) - 2)}px`\n            if (element.scrollHeight > parseInt(computed.height))\n                style.overflowY = 'scroll'\n        } else {\n            style.overflow = 'hidden'\n        }\n\n        div.textContent = element.value.substring(0, position)\n\n        if (element.nodeName === 'INPUT') {\n            div.textContent = div.textContent.replace(/\\s/g, ' ')\n        }\n\n        let span = this.getDocument().createElement('span')\n        span.textContent = element.value.substring(position) || '.'\n        div.appendChild(span)\n\n        let rect = element.getBoundingClientRect()\n        let doc = document.documentElement\n        let windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0)\n        let windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\n\n        let top = 0;\n        let left = 0;\n        if (this.menuContainerIsBody) {\n          top = rect.top;\n          left = rect.left;\n        }\n\n        let coordinates = {\n            top: top + windowTop + span.offsetTop + parseInt(computed.borderTopWidth) + parseInt(computed.fontSize) - element.scrollTop,\n            left: left + windowLeft + span.offsetLeft + parseInt(computed.borderLeftWidth)\n        }\n\n        let windowWidth = window.innerWidth\n        let windowHeight = window.innerHeight\n\n        let menuDimensions = this.getMenuDimensions()\n        let menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\n\n        if (menuIsOffScreen.right) {\n            coordinates.right = windowWidth - coordinates.left\n            coordinates.left = 'auto'\n        }\n\n        let parentHeight = this.tribute.menuContainer\n            ? this.tribute.menuContainer.offsetHeight\n            : this.getDocument().body.offsetHeight\n\n        if (menuIsOffScreen.bottom) {\n            let parentRect = this.tribute.menuContainer\n                ? this.tribute.menuContainer.getBoundingClientRect()\n                : this.getDocument().body.getBoundingClientRect()\n            let scrollStillAvailable = parentHeight - (windowHeight - parentRect.top)\n\n            coordinates.bottom = scrollStillAvailable + (windowHeight - rect.top - span.offsetTop)\n            coordinates.top = 'auto'\n        }\n\n        menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\n        if (menuIsOffScreen.left) {\n            coordinates.left = windowWidth > menuDimensions.width\n                ? windowLeft + windowWidth - menuDimensions.width\n                : windowLeft\n            delete coordinates.right\n        }\n        if (menuIsOffScreen.top) {\n            coordinates.top = windowHeight > menuDimensions.height\n                ? windowTop + windowHeight - menuDimensions.height\n                : windowTop\n            delete coordinates.bottom\n        }\n\n        this.getDocument().body.removeChild(div)\n        return coordinates\n    }\n\n    getContentEditableCaretPosition(selectedNodePosition) {\n        let range\n        let sel = this.getWindowSelection()\n\n        range = this.getDocument().createRange()\n        range.setStart(sel.anchorNode, selectedNodePosition)\n        range.setEnd(sel.anchorNode, selectedNodePosition)\n\n        range.collapse(false)\n\n        let rect = range.getBoundingClientRect()\n        let doc = document.documentElement\n        let windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0)\n        let windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\n\n        let left = rect.left\n        let top = rect.top\n\n        let coordinates = {\n            left: left + windowLeft,\n            top: top + rect.height + windowTop\n        }\n        let windowWidth = window.innerWidth\n        let windowHeight = window.innerHeight\n\n        let menuDimensions = this.getMenuDimensions()\n        let menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\n\n        if (menuIsOffScreen.right) {\n            coordinates.left = 'auto'\n            coordinates.right = windowWidth - rect.left - windowLeft\n        }\n\n        let parentHeight = this.tribute.menuContainer\n            ? this.tribute.menuContainer.offsetHeight\n            : this.getDocument().body.offsetHeight\n\n        if (menuIsOffScreen.bottom) {\n            let parentRect = this.tribute.menuContainer\n                ? this.tribute.menuContainer.getBoundingClientRect()\n                : this.getDocument().body.getBoundingClientRect()\n            let scrollStillAvailable = parentHeight - (windowHeight - parentRect.top)\n\n            coordinates.top = 'auto'\n            coordinates.bottom = scrollStillAvailable + (windowHeight - rect.top)\n        }\n\n        menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\n        if (menuIsOffScreen.left) {\n            coordinates.left = windowWidth > menuDimensions.width\n                ? windowLeft + windowWidth - menuDimensions.width\n                : windowLeft\n            delete coordinates.right\n        }\n        if (menuIsOffScreen.top) {\n            coordinates.top = windowHeight > menuDimensions.height\n                ? windowTop + windowHeight - menuDimensions.height\n                : windowTop\n            delete coordinates.bottom\n        }\n\n        if (!this.menuContainerIsBody) {\n            coordinates.left = coordinates.left ? coordinates.left - this.tribute.menuContainer.offsetLeft : coordinates.left\n            coordinates.top = coordinates.top ? coordinates.top - this.tribute.menuContainer.offsetTop : coordinates.top\n        }\n\n        return coordinates\n    }\n\n    scrollIntoView(elem) {\n        let reasonableBuffer = 20,\n            clientRect\n        let maxScrollDisplacement = 100\n        let e = this.menu\n\n        if (typeof e === 'undefined') return;\n\n        while (clientRect === undefined || clientRect.height === 0) {\n            clientRect = e.getBoundingClientRect()\n\n            if (clientRect.height === 0) {\n                e = e.childNodes[0]\n                if (e === undefined || !e.getBoundingClientRect) {\n                    return\n                }\n            }\n        }\n\n        let elemTop = clientRect.top\n        let elemBottom = elemTop + clientRect.height\n\n        if (elemTop < 0) {\n            window.scrollTo(0, window.pageYOffset + clientRect.top - reasonableBuffer)\n        } else if (elemBottom > window.innerHeight) {\n            let maxY = window.pageYOffset + clientRect.top - reasonableBuffer\n\n            if (maxY - window.pageYOffset > maxScrollDisplacement) {\n                maxY = window.pageYOffset + maxScrollDisplacement\n            }\n\n            let targetY = window.pageYOffset - (window.innerHeight - elemBottom)\n\n            if (targetY > maxY) {\n                targetY = maxY\n            }\n\n            window.scrollTo(0, targetY)\n        }\n    }\n}\n\n\nexport default TributeRange;\n","// Thanks to https://github.com/mattyork/fuzzy\nclass TributeSearch {\n    constructor(tribute) {\n        this.tribute = tribute\n        this.tribute.search = this\n    }\n\n    simpleFilter(pattern, array) {\n        return array.filter(string => {\n            return this.test(pattern, string)\n        })\n    }\n\n    test(pattern, string) {\n        return this.match(pattern, string) !== null\n    }\n\n    match(pattern, string, opts) {\n        opts = opts || {}\n        let patternIdx = 0,\n            result = [],\n            len = string.length,\n            totalScore = 0,\n            currScore = 0,\n            pre = opts.pre || '',\n            post = opts.post || '',\n            compareString = opts.caseSensitive && string || string.toLowerCase(),\n            ch, compareChar\n\n        if (opts.skip) {\n            return {rendered: string, score: 0}\n        }\n\n        pattern = opts.caseSensitive && pattern || pattern.toLowerCase()\n\n        let patternCache = this.traverse(compareString, pattern, 0, 0, [])\n        if (!patternCache) {\n            return null\n        }\n        return {\n            rendered: this.render(string, patternCache.cache, pre, post),\n            score: patternCache.score\n        }\n    }\n\n    traverse(string, pattern, stringIndex, patternIndex, patternCache) {\n        if (this.tribute.autocompleteSeparator) {\n            // if the pattern search at end\n            pattern = pattern.split(this.tribute.autocompleteSeparator).splice(-1)[0];\n        }\n\n        if (pattern.length === patternIndex) {\n\n            // calculate score and copy the cache containing the indices where it's found\n            return {\n                score: this.calculateScore(patternCache),\n                cache: patternCache.slice()\n            }\n        }\n\n        // if string at end or remaining pattern > remaining string\n        if (string.length === stringIndex || pattern.length - patternIndex > string.length - stringIndex) {\n            return undefined\n        }\n\n        let c = pattern[patternIndex]\n        let index = string.indexOf(c, stringIndex)\n        let best, temp\n\n        while (index > -1) {\n            patternCache.push(index)\n            temp = this.traverse(string, pattern, index + 1, patternIndex + 1, patternCache)\n            patternCache.pop()\n\n            // if downstream traversal failed, return best answer so far\n            if (!temp) {\n                return best\n            }\n\n            if (!best || best.score < temp.score) {\n                best = temp\n            }\n\n            index = string.indexOf(c, index + 1)\n        }\n\n        return best\n    }\n\n    calculateScore(patternCache) {\n        let score = 0\n        let temp = 1\n\n        patternCache.forEach((index, i) => {\n            if (i > 0) {\n                if (patternCache[i - 1] + 1 === index) {\n                    temp += temp + 1\n                }\n                else {\n                    temp = 1\n                }\n            }\n\n            score += temp\n        })\n\n        return score\n    }\n\n    render(string, indices, pre, post) {\n        var rendered = string.substring(0, indices[0])\n\n        indices.forEach((index, i) => {\n            rendered += pre + string[index] + post +\n                string.substring(index + 1, (indices[i + 1]) ? indices[i + 1] : string.length)\n        })\n\n        return rendered\n    }\n\n    filter(pattern, arr, opts) {\n        opts = opts || {}\n        return arr\n            .reduce((prev, element, idx, arr) => {\n                let str = element\n\n                if (opts.extract) {\n                    str = opts.extract(element)\n\n                    if (!str) { // take care of undefineds / nulls / etc.\n                        str = ''\n                    }\n                }\n\n                let rendered = this.match(pattern, str, opts)\n\n                if (rendered != null) {\n                    prev[prev.length] = {\n                        string: rendered.rendered,\n                        score: rendered.score,\n                        index: idx,\n                        original: element\n                    }\n                }\n\n                return prev\n            }, [])\n\n        .sort((a, b) => {\n            let compare = b.score - a.score\n            if (compare) return compare\n            return a.index - b.index\n        })\n    }\n}\n\nexport default TributeSearch;\n","import \"./utils\";\nimport TributeEvents from \"./TributeEvents\";\nimport TributeMenuEvents from \"./TributeMenuEvents\";\nimport TributeRange from \"./TributeRange\";\nimport TributeSearch from \"./TributeSearch\";\n\nclass Tribute {\n  constructor({\n    values = null,\n    iframe = null,\n    selectClass = \"highlight\",\n    containerClass = \"tribute-container\",\n    itemClass = \"\",\n    trigger = \"@\",\n    autocompleteMode = false,\n    autocompleteSeparator = null,\n    selectTemplate = null,\n    menuItemTemplate = null,\n    lookup = \"key\",\n    fillAttr = \"value\",\n    collection = null,\n    menuContainer = null,\n    noMatchTemplate = null,\n    requireLeadingSpace = true,\n    allowSpaces = false,\n    replaceTextSuffix = null,\n    positionMenu = true,\n    spaceSelectsMatch = false,\n    searchOpts = {},\n    menuItemLimit = null,\n    menuShowMinLength = 0\n  }) {\n    this.autocompleteMode = autocompleteMode;\n    this.autocompleteSeparator = autocompleteSeparator;\n    this.menuSelected = 0;\n    this.current = {};\n    this.inputEvent = false;\n    this.isActive = false;\n    this.menuContainer = menuContainer;\n    this.allowSpaces = allowSpaces;\n    this.replaceTextSuffix = replaceTextSuffix;\n    this.positionMenu = positionMenu;\n    this.hasTrailingSpace = false;\n    this.spaceSelectsMatch = spaceSelectsMatch;\n\n    if (this.autocompleteMode) {\n      trigger = \"\";\n      allowSpaces = false;\n    }\n\n    if (values) {\n      this.collection = [\n        {\n          // symbol that starts the lookup\n          trigger: trigger,\n\n          // is it wrapped in an iframe\n          iframe: iframe,\n\n          // class applied to selected item\n          selectClass: selectClass,\n\n          // class applied to the Container\n          containerClass: containerClass,\n\n          // class applied to each item\n          itemClass: itemClass,\n\n          // function called on select that retuns the content to insert\n          selectTemplate: (\n            selectTemplate || Tribute.defaultSelectTemplate\n          ).bind(this),\n\n          // function called that returns content for an item\n          menuItemTemplate: (\n            menuItemTemplate || Tribute.defaultMenuItemTemplate\n          ).bind(this),\n\n          // function called when menu is empty, disables hiding of menu.\n          noMatchTemplate: (t => {\n            if (typeof t === \"string\") {\n              if (t.trim() === \"\") return null;\n              return t;\n            }\n            if (typeof t === \"function\") {\n              return t.bind(this);\n            }\n\n            return (\n              noMatchTemplate ||\n              function() {\n                return \"<li>No Match Found!</li>\";\n              }.bind(this)\n            );\n          })(noMatchTemplate),\n\n          // column to search against in the object\n          lookup: lookup,\n\n          // column that contains the content to insert by default\n          fillAttr: fillAttr,\n\n          // array of objects or a function returning an array of objects\n          values: values,\n\n          requireLeadingSpace: requireLeadingSpace,\n\n          searchOpts: searchOpts,\n\n          menuItemLimit: menuItemLimit,\n\n          menuShowMinLength: menuShowMinLength\n        }\n      ];\n    } else if (collection) {\n      if (this.autocompleteMode)\n        console.warn(\n          \"Tribute in autocomplete mode does not work for collections\"\n        );\n      this.collection = collection.map(item => {\n        return {\n          trigger: item.trigger || trigger,\n          iframe: item.iframe || iframe,\n          selectClass: item.selectClass || selectClass,\n          containerClass: item.containerClass || containerClass,\n          itemClass: item.itemClass || itemClass,\n          selectTemplate: (\n            item.selectTemplate || Tribute.defaultSelectTemplate\n          ).bind(this),\n          menuItemTemplate: (\n            item.menuItemTemplate || Tribute.defaultMenuItemTemplate\n          ).bind(this),\n          // function called when menu is empty, disables hiding of menu.\n          noMatchTemplate: (t => {\n            if (typeof t === \"string\") {\n              if (t.trim() === \"\") return null;\n              return t;\n            }\n            if (typeof t === \"function\") {\n              return t.bind(this);\n            }\n\n            return (\n              noMatchTemplate ||\n              function() {\n                return \"<li>No Match Found!</li>\";\n              }.bind(this)\n            );\n          })(noMatchTemplate),\n          lookup: item.lookup || lookup,\n          fillAttr: item.fillAttr || fillAttr,\n          values: item.values,\n          requireLeadingSpace: item.requireLeadingSpace,\n          searchOpts: item.searchOpts || searchOpts,\n          menuItemLimit: item.menuItemLimit || menuItemLimit,\n          menuShowMinLength: item.menuShowMinLength || menuShowMinLength\n        };\n      });\n    } else {\n      throw new Error(\"[Tribute] No collection specified.\");\n    }\n\n    new TributeRange(this);\n    new TributeEvents(this);\n    new TributeMenuEvents(this);\n    new TributeSearch(this);\n  }\n\n  get isActive() {\n    return this._isActive;\n  }\n\n  set isActive(val) {\n    if (this._isActive != val) {\n      this._isActive = val;\n      if (this.current.element) {\n        let noMatchEvent = new CustomEvent(`tribute-active-${val}`);\n        this.current.element.dispatchEvent(noMatchEvent);\n      }\n    }\n  }\n\n  static defaultSelectTemplate(item) {\n    if (typeof item === \"undefined\")\n      return `${this.current.collection.trigger}${this.current.mentionText}`;\n    if (this.range.isContentEditable(this.current.element)) {\n      return (\n        '<span class=\"tribute-mention\">' +\n        (this.current.collection.trigger +\n          item.original[this.current.collection.fillAttr]) +\n        \"</span>\"\n      );\n    }\n\n    return (\n      this.current.collection.trigger +\n      item.original[this.current.collection.fillAttr]\n    );\n  }\n\n  static defaultMenuItemTemplate(matchItem) {\n    return matchItem.string;\n  }\n\n  static inputTypes() {\n    return [\"TEXTAREA\", \"INPUT\"];\n  }\n\n  triggers() {\n    return this.collection.map(config => {\n      return config.trigger;\n    });\n  }\n\n  attach(el) {\n    if (!el) {\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\n    }\n\n    // Check if it is a jQuery collection\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\n      el = el.get();\n    }\n\n    // Is el an Array/Array-like object?\n    if (\n      el.constructor === NodeList ||\n      el.constructor === HTMLCollection ||\n      el.constructor === Array\n    ) {\n      let length = el.length;\n      for (var i = 0; i < length; ++i) {\n        this._attach(el[i]);\n      }\n    } else {\n      this._attach(el);\n    }\n  }\n\n  _attach(el) {\n    if (el.hasAttribute(\"data-tribute\")) {\n      console.warn(\"Tribute was already bound to \" + el.nodeName);\n    }\n\n    this.ensureEditable(el);\n    this.events.bind(el);\n    el.setAttribute(\"data-tribute\", true);\n  }\n\n  ensureEditable(element) {\n    if (Tribute.inputTypes().indexOf(element.nodeName) === -1) {\n      if (element.contentEditable) {\n        element.contentEditable = true;\n      } else {\n        throw new Error(\"[Tribute] Cannot bind to \" + element.nodeName);\n      }\n    }\n  }\n\n  createMenu(containerClass) {\n    let wrapper = this.range.getDocument().createElement(\"div\"),\n      ul = this.range.getDocument().createElement(\"ul\");\n    wrapper.className = containerClass;\n    wrapper.appendChild(ul);\n\n    if (this.menuContainer) {\n      return this.menuContainer.appendChild(wrapper);\n    }\n\n    return this.range.getDocument().body.appendChild(wrapper);\n  }\n\n  showMenuFor(element, scrollTo) {\n    // Only proceed if menu isn't already shown for the current element & mentionText\n    if (\n      this.isActive &&\n      this.current.element === element &&\n      this.current.mentionText === this.currentMentionTextSnapshot\n    ) {\n      return;\n    }\n    this.currentMentionTextSnapshot = this.current.mentionText;\n\n    // create the menu if it doesn't exist.\n    if (!this.menu) {\n      this.menu = this.createMenu(this.current.collection.containerClass);\n      element.tributeMenu = this.menu;\n      this.menuEvents.bind(this.menu);\n    }\n\n    this.isActive = true;\n    this.menuSelected = 0;\n\n    if (!this.current.mentionText) {\n      this.current.mentionText = \"\";\n    }\n\n    const processValues = values => {\n      // Tribute may not be active any more by the time the value callback returns\n      if (!this.isActive) {\n        return;\n      }\n\n      let items = this.search.filter(this.current.mentionText, values, {\n        pre: this.current.collection.searchOpts.pre || \"<span>\",\n        post: this.current.collection.searchOpts.post || \"</span>\",\n        skip: this.current.collection.searchOpts.skip,\n        extract: el => {\n          if (typeof this.current.collection.lookup === \"string\") {\n            return el[this.current.collection.lookup];\n          } else if (typeof this.current.collection.lookup === \"function\") {\n            return this.current.collection.lookup(el, this.current.mentionText);\n          } else {\n            throw new Error(\n              \"Invalid lookup attribute, lookup must be string or function.\"\n            );\n          }\n        }\n      });\n\n      if (this.current.collection.menuItemLimit) {\n        items = items.slice(0, this.current.collection.menuItemLimit);\n      }\n\n      this.current.filteredItems = items;\n\n      let ul = this.menu.querySelector(\"ul\");\n\n      this.range.positionMenuAtCaret(scrollTo);\n\n      if (!items.length) {\n        let noMatchEvent = new CustomEvent(\"tribute-no-match\", {\n          detail: this.menu\n        });\n        this.current.element.dispatchEvent(noMatchEvent);\n        if (\n          (typeof this.current.collection.noMatchTemplate === \"function\" &&\n            !this.current.collection.noMatchTemplate()) ||\n          !this.current.collection.noMatchTemplate\n        ) {\n          this.hideMenu();\n        } else {\n          typeof this.current.collection.noMatchTemplate === \"function\"\n            ? (ul.innerHTML = this.current.collection.noMatchTemplate())\n            : (ul.innerHTML = this.current.collection.noMatchTemplate);\n        }\n\n        return;\n      }\n\n      ul.innerHTML = \"\";\n      let fragment = this.range.getDocument().createDocumentFragment();\n\n      items.forEach((item, index) => {\n        let li = this.range.getDocument().createElement(\"li\");\n        li.setAttribute(\"data-index\", index);\n        li.className = this.current.collection.itemClass;\n        li.addEventListener(\"mousemove\", e => {\n          let [li, index] = this._findLiTarget(e.target);\n          if (e.movementY !== 0) {\n            this.events.setActiveLi(index);\n          }\n        });\n        if (this.menuSelected === index) {\n          li.classList.add(this.current.collection.selectClass);\n        }\n        li.innerHTML = this.current.collection.menuItemTemplate(item);\n        fragment.appendChild(li);\n      });\n      ul.appendChild(fragment);\n    };\n\n    if (typeof this.current.collection.values === \"function\") {\n      this.current.collection.values(this.current.fullText, processValues);\n    } else {\n      processValues(this.current.collection.values);\n    }\n  }\n\n  _findLiTarget(el) {\n    if (!el) return [];\n    const index = el.getAttribute(\"data-index\");\n    return !index ? this._findLiTarget(el.parentNode) : [el, index];\n  }\n\n  showMenuForCollection(element, collectionIndex) {\n    if (element !== document.activeElement) {\n      this.placeCaretAtEnd(element);\n    }\n\n    this.current.collection = this.collection[collectionIndex || 0];\n    this.current.externalTrigger = true;\n    this.current.element = element;\n\n    if (element.isContentEditable)\n      this.insertTextAtCursor(this.current.collection.trigger);\n    else this.insertAtCaret(element, this.current.collection.trigger);\n\n    this.showMenuFor(element);\n  }\n\n  // TODO: make sure this works for inputs/textareas\n  placeCaretAtEnd(el) {\n    el.focus();\n    if (\n      typeof window.getSelection != \"undefined\" &&\n      typeof document.createRange != \"undefined\"\n    ) {\n      var range = document.createRange();\n      range.selectNodeContents(el);\n      range.collapse(false);\n      var sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(range);\n    } else if (typeof document.body.createTextRange != \"undefined\") {\n      var textRange = document.body.createTextRange();\n      textRange.moveToElementText(el);\n      textRange.collapse(false);\n      textRange.select();\n    }\n  }\n\n  // for contenteditable\n  insertTextAtCursor(text) {\n    var sel, range, html;\n    sel = window.getSelection();\n    range = sel.getRangeAt(0);\n    range.deleteContents();\n    var textNode = document.createTextNode(text);\n    range.insertNode(textNode);\n    range.selectNodeContents(textNode);\n    range.collapse(false);\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n\n  // for regular inputs\n  insertAtCaret(textarea, text) {\n    var scrollPos = textarea.scrollTop;\n    var caretPos = textarea.selectionStart;\n\n    var front = textarea.value.substring(0, caretPos);\n    var back = textarea.value.substring(\n      textarea.selectionEnd,\n      textarea.value.length\n    );\n    textarea.value = front + text + back;\n    caretPos = caretPos + text.length;\n    textarea.selectionStart = caretPos;\n    textarea.selectionEnd = caretPos;\n    textarea.focus();\n    textarea.scrollTop = scrollPos;\n  }\n\n  hideMenu() {\n    if (this.menu) {\n      this.menu.style.cssText = \"display: none;\";\n      this.isActive = false;\n      this.menuSelected = 0;\n      this.current = {};\n    }\n  }\n\n  selectItemAtIndex(index, originalEvent) {\n    index = parseInt(index);\n    if (typeof index !== \"number\" || isNaN(index)) return;\n    let item = this.current.filteredItems[index];\n    let content = this.current.collection.selectTemplate(item);\n    if (content !== null) this.replaceText(content, originalEvent, item);\n  }\n\n  replaceText(content, originalEvent, item) {\n    this.range.replaceTriggerText(content, true, true, originalEvent, item);\n  }\n\n  _append(collection, newValues, replace) {\n    if (typeof collection.values === \"function\") {\n      throw new Error(\"Unable to append to values, as it is a function.\");\n    } else if (!replace) {\n      collection.values = collection.values.concat(newValues);\n    } else {\n      collection.values = newValues;\n    }\n  }\n\n  append(collectionIndex, newValues, replace) {\n    let index = parseInt(collectionIndex);\n    if (typeof index !== \"number\")\n      throw new Error(\"please provide an index for the collection to update.\");\n\n    let collection = this.collection[index];\n\n    this._append(collection, newValues, replace);\n  }\n\n  appendCurrent(newValues, replace) {\n    if (this.isActive) {\n      this._append(this.current.collection, newValues, replace);\n    } else {\n      throw new Error(\n        \"No active state. Please use append instead and pass an index.\"\n      );\n    }\n  }\n\n  detach(el) {\n    if (!el) {\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\n    }\n\n    // Check if it is a jQuery collection\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\n      el = el.get();\n    }\n\n    // Is el an Array/Array-like object?\n    if (\n      el.constructor === NodeList ||\n      el.constructor === HTMLCollection ||\n      el.constructor === Array\n    ) {\n      let length = el.length;\n      for (var i = 0; i < length; ++i) {\n        this._detach(el[i]);\n      }\n    } else {\n      this._detach(el);\n    }\n  }\n\n  _detach(el) {\n    this.events.unbind(el);\n    if (el.tributeMenu) {\n      this.menuEvents.unbind(el.tributeMenu);\n    }\n\n    setTimeout(() => {\n      el.removeAttribute(\"data-tribute\");\n      this.isActive = false;\n      if (el.tributeMenu) {\n        el.tributeMenu.remove();\n      }\n    });\n  }\n}\n\nexport default Tribute;\n"],"names":["Array","prototype","find","predicate","this","TypeError","value","list","Object","length","thisArg","arguments","i","call","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","Event","TributeEvents","tribute","events","element","boundKeydown","keydown","bind","boundKeyup","keyup","boundInput","input","addEventListener","removeEventListener","instance","shouldDeactivate","isActive","hideMenu","commandEvent","KeyboardEvent","modifiers","forEach","o","getModifierState","keys","key","keyCode","callbacks","toLowerCase","inputEvent","menu","contains","target","li","preventDefault","stopPropagation","nodeName","parentNode","Error","selectItemAtIndex","getAttribute","current","externalTrigger","setTimeout","updateSelection","allowSpaces","hasTrailingSpace","autocompleteMode","triggerChar","getKeyCode","isNaN","trigger","triggers","charCodeAt","mentionText","collection","menuShowMinLength","showMenuFor","eventKeyPressed","el","info","range","getTriggerInfo","mentionTriggerChar","selectedPath","mentionSelectedPath","fullText","selectedOffset","mentionSelectedOffset","e","_this","collectionItem","item","enter","filteredItems","menuSelected","escape","tab","space","spaceSelectsMatch","up","count","selected","setActiveLi","scrollTop","scrollHeight","down","index","lis","querySelectorAll","parseInt","classList","add","selectClass","liClientRect","getBoundingClientRect","menuClientRect","bottom","scrollDistance","top","remove","elem","includeMargin","height","style","currentStyle","getComputedStyle","parseFloat","marginTop","marginBottom","TributeMenuEvents","menuEvents","menuClickEvent","click","menuContainerScrollEvent","debounce","windowResizeEvent","positionMenuAtCaret","getDocument","menuContainer","func","wait","immediate","timeout","context","_this2","args","callNow","clearTimeout","apply","TributeRange","iframe","contentWindow","scrollTo","coordinates","positionMenu","cssText","isContentEditable","getContentEditableCaretPosition","mentionPosition","getTextAreaOrInputUnderlinePosition","left","right","scrollIntoView","menuDimensions","width","offsetWidth","offsetHeight","menuIsOffScreen","isMenuOffScreen","menuIsOffScreenHorizontally","innerWidth","menuIsOffScreenVertically","innerHeight","targetElement","path","offset","childNodes","nextSibling","previousSibling","sel","getWindowSelection","createRange","setStart","setEnd","collapse","removeAllRanges","error","addRange","focus","text","requireLeadingSpace","originalEvent","replaceEvent","replaceTextSuffix","endPos","pasteHtml","myField","textSuffix","startPos","substring","selectionStart","selectionEnd","dispatchEvent","html","anchorNode","nodeValue","getSelection","ctx","ce","contentEditable","getNodePositionInParent","push","reverse","getRangeAt","startOffset","selectedElem","workingNodeContent","textContent","selectStartOffset","textComponent","wordsArray","replace","autocompleteSeparator","split","trim","menuAlreadyActive","isAutocomplete","selectionInfo","getContentEditableSelectedPath","effectiveRange","getTextPrecedingCurrentSelection","lastWordOfEffectiveRange","getLastWordInText","mentionSelectedElement","mostRecentTriggerCharPos","config","c","idx","lastIndexWithLeadingSpace","lastIndexOf","test","currentTriggerSnippet","firstSnippetChar","leadingSpace","regex","str","reversedStr","join","cidx","len","firstChar","match","triggerIdx","windowWidth","windowHeight","doc","documentElement","windowLeft","pageXOffset","scrollLeft","clientLeft","windowTop","pageYOffset","clientTop","menuTop","menuRight","menuBottom","menuLeft","Math","floor","ceil","dimensions","position","flipped","isFirefox","mozInnerScreenX","div","createElement","id","body","appendChild","computed","whiteSpace","wordWrap","visibility","prop","overflowY","overflow","span","rect","menuContainerIsBody","offsetTop","borderTopWidth","fontSize","offsetLeft","borderLeftWidth","getMenuDimensions","parentHeight","scrollStillAvailable","removeChild","selectedNodePosition","clientRect","elemTop","elemBottom","maxY","targetY","TributeSearch","search","pattern","array","filter","string","opts","pre","post","compareString","caseSensitive","skip","rendered","score","patternCache","traverse","render","cache","stringIndex","patternIndex","splice","calculateScore","slice","best","temp","indexOf","pop","indices","arr","reduce","prev","extract","original","sort","a","b","compare","t","values","containerClass","itemClass","selectTemplate","menuItemTemplate","lookup","fillAttr","noMatchTemplate","searchOpts","menuItemLimit","Tribute","defaultSelectTemplate","defaultMenuItemTemplate","console","warn","map","jQuery","get","constructor","NodeList","HTMLCollection","_attach","hasAttribute","ensureEditable","setAttribute","inputTypes","wrapper","ul","className","currentMentionTextSnapshot","createMenu","tributeMenu","processValues","items","querySelector","noMatchEvent","innerHTML","fragment","createDocumentFragment","_findLiTarget","movementY","collectionIndex","activeElement","placeCaretAtEnd","insertTextAtCursor","insertAtCaret","selectNodeContents","createTextRange","textRange","moveToElementText","select","deleteContents","textNode","createTextNode","insertNode","textarea","scrollPos","caretPos","front","back","content","replaceText","replaceTriggerText","newValues","concat","_append","_detach","unbind","removeAttribute","_this3","_isActive","val","matchItem"],"mappings":"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"}