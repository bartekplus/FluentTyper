{"version":3,"file":"tribute.min.js","sources":["../src/utils.js","../src/TributeEvents.js","../src/TributeMenuEvents.js","../src/TributeRange.js","../src/TributeSearch.js","../src/Tribute.js"],"sourcesContent":["if (!Array.prototype.find) {\n    Array.prototype.find = function(predicate) {\n        if (this === null) {\n            throw new TypeError('Array.prototype.find called on null or undefined')\n        }\n        if (typeof predicate !== 'function') {\n            throw new TypeError('predicate must be a function')\n        }\n        var list = Object(this)\n        var length = list.length >>> 0\n        var thisArg = arguments[1]\n        var value\n\n        for (var i = 0; i < length; i++) {\n            value = list[i]\n            if (predicate.call(thisArg, value, i, list)) {\n                return value\n            }\n        }\n        return undefined\n    }\n}\n\nif (window && typeof window.CustomEvent !== \"function\") {\n  function CustomEvent(event, params) {\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: undefined\n    }\n    var evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail)\n    return evt\n  }\n\n if (typeof window.Event !== 'undefined') {\n   CustomEvent.prototype = window.Event.prototype\n }\n\n  window.CustomEvent = CustomEvent\n}","class TributeEvents {\n  constructor(tribute) {\n    this.tribute = tribute;\n    this.tribute.events = this;\n  }\n\n  static keys() {\n    return [\n      {\n        key: 9,\n        value: \"TAB\"\n      },\n      {\n        key: 13,\n        value: \"ENTER\"\n      },\n      {\n        key: 27,\n        value: \"ESCAPE\"\n      },\n      {\n        key: 38,\n        value: \"UP\"\n      },\n      {\n        key: 40,\n        value: \"DOWN\"\n      }\n    ];\n  }\n\n  static modifiers() {\n    return [\n      \"CapsLock\",\n      \"Control\",\n      \"Fn\",\n      \"Hyper\",\n      \"Meta\",\n      \"OS\",\n      \"Super\",\n      \"Symbol\",\n      \"Win\"\n    ];\n  }\n\n  bind(element) {\n    element.boundKeydown = this.keydown.bind(element, this, false);\n    element.boundKeyup = this.keyup.bind(element, this, false);\n    element.boundInput = this.input.bind(element, this, false);\n\n    element.addEventListener(\"keydown\", element.boundKeydown, false);\n    element.addEventListener(\"keyup\", element.boundKeyup, false);\n    element.addEventListener(\"input\", element.boundInput, false);\n  }\n\n  unbind(element) {\n    element.removeEventListener(\"keydown\", element.boundKeydown, false);\n    element.removeEventListener(\"keyup\", element.boundKeyup, false);\n    element.removeEventListener(\"input\", element.boundInput, false);\n\n    delete element.boundKeydown;\n    delete element.boundKeyup;\n    delete element.boundInput;\n  }\n\n  keydown(instance, isMenu, event) {\n    if (instance.shouldDeactivate(event, isMenu)) {\n      instance.tribute.isActive = false;\n      instance.tribute.hideMenu();\n    }\n\n    let element = this;\n    instance.commandEvent = false;\n\n    if (event instanceof KeyboardEvent) {\n      TributeEvents.modifiers().forEach(o => {\n        if (event.getModifierState(o)) {\n          instance.commandEvent = true;\n          return;\n        }\n      });\n    }\n\n    TributeEvents.keys().forEach(o => {\n      if (o.key === event.keyCode) {\n        instance.commandEvent = true;\n        instance.callbacks()[o.value.toLowerCase()](event, element);\n      }\n    });\n  }\n\n  input(instance, isMenu, event) {\n    instance.inputEvent = event instanceof CustomEvent ? false : true;\n    instance.commandEvent = !instance.inputEvent;\n    instance.keyup.call(this, instance, isMenu, event);\n  }\n\n  click(instance, event) {\n    let tribute = instance.tribute;\n    if (tribute.menu && tribute.menu.contains(event.target)) {\n      let li = event.target;\n      event.preventDefault();\n      event.stopPropagation();\n      while (li.nodeName.toLowerCase() !== \"li\") {\n        li = li.parentNode;\n        if (!li || li === tribute.menu) {\n          throw new Error(\"cannot find the <li> container for the click\");\n        }\n      }\n      tribute.hideMenu();\n      tribute.selectItemAtIndex(li.getAttribute(\"data-index\"), event);\n\n      // TODO: should fire with externalTrigger and target is outside of menu\n    } else if (tribute.current.element && !tribute.current.externalTrigger) {\n      tribute.current.externalTrigger = false;\n      setTimeout(() => tribute.hideMenu());\n    }\n  }\n\n  keyup(instance, isMenu, event) {\n    if (instance.inputEvent) {\n      instance.inputEvent = false;\n    }\n    \n    if (!isMenu)\n    {\n      instance.updateSelection(this);\n    }\n\n    if (event instanceof KeyboardEvent) {\n      TributeEvents.modifiers().forEach(o => {\n        if (event.getModifierState(o)) {\n          instance.commandEvent = true;\n          return;\n        }\n      });\n    }\n\n    if (event.keyCode === 27) return;\n\n    if (!instance.tribute.allowSpaces && instance.tribute.hasTrailingSpace) {\n      instance.tribute.hasTrailingSpace = false;\n      instance.commandEvent = true;\n      instance.callbacks()[\"space\"](event, this);\n      return;\n    }\n\n    if (!instance.tribute.isActive) {\n      if (instance.tribute.autocompleteMode) {\n        instance.callbacks().triggerChar(event, this, \"\");\n      } else {\n        let keyCode = instance.getKeyCode(instance, this, event);\n\n        if (isNaN(keyCode) || !keyCode) return;\n\n        let trigger = instance.tribute.triggers().find(trigger => {\n          return trigger.charCodeAt(0) === keyCode;\n        });\n\n        if (typeof trigger !== \"undefined\") {\n          instance.callbacks().triggerChar(event, this, trigger);\n        }\n      }\n    }\n\n    if (\n      instance.tribute.current.mentionText.length <\n      instance.tribute.current.collection.menuShowMinLength\n    ) {\n      return;\n    }\n\n    if (\n      ((instance.tribute.current.trigger ||\n        instance.tribute.autocompleteMode) &&\n        instance.commandEvent === false) ||\n      (instance.tribute.isActive && event.keyCode === 8)\n    ) {\n      instance.tribute.showMenuFor(this, true);\n    }\n  }\n\n  shouldDeactivate(event, isMenu) {\n    if (!this.tribute.isActive) return false;\n\n    //if (this.tribute.current.mentionText.length === 0) {\n      let eventKeyPressed = false;\n      TributeEvents.keys().forEach(o => {\n        if (event.keyCode === o.key) eventKeyPressed = true;\n      });\n\n      if (eventKeyPressed) return false;\n    //}\n    // If it's a menu we need to forward the event\n    if (isMenu)\n    {\n        setTimeout( function(element) {         \n          element.dispatchEvent(event);\n        }, 0, this.tribute.current.element);\n        return true;\n    }\n\n    return false;\n  }\n\n  getKeyCode(instance, el, event) {\n    let char;\n    let tribute = instance.tribute;\n    let info = tribute.range.getTriggerInfo(\n      false,\n      tribute.hasTrailingSpace,\n      true,\n      tribute.allowSpaces,\n      tribute.autocompleteMode\n    );\n\n    if (info) {\n      return info.mentionTriggerChar.charCodeAt(0);\n    } else {\n      return false;\n    }\n  }\n\n  updateSelection(el) {\n    this.tribute.current.element = el;\n    let info = this.tribute.range.getTriggerInfo(\n      false,\n      this.tribute.hasTrailingSpace,\n      true,\n      this.tribute.allowSpaces,\n      this.tribute.autocompleteMode\n    );\n\n    if (info) {\n      this.tribute.current.selectedPath = info.mentionSelectedPath;\n      this.tribute.current.mentionText = info.mentionText;\n      this.tribute.current.fullText = info.fullText;\n      this.tribute.current.selectedOffset = info.mentionSelectedOffset;\n      this.tribute.current.info = info;\n    }\n  }\n\n  callbacks() {\n    return {\n      triggerChar: (e, el, trigger) => {\n        let tribute = this.tribute;\n        tribute.current.trigger = trigger;\n\n        let collectionItem = tribute.collection.find(item => {\n          return item.trigger === trigger;\n        });\n\n        tribute.current.collection = collectionItem;\n\n        if (\n          tribute.current.mentionText.length >=\n            tribute.current.collection.menuShowMinLength &&\n          tribute.inputEvent\n        ) {\n          tribute.showMenuFor(el, true);\n        }\n      },\n      enter: (e, el) => {\n        // choose selection\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          setTimeout(() => {\n            this.tribute.hideMenu();\n            this.tribute.selectItemAtIndex(this.tribute.menuSelected, e);\n          }, 0);\n        }\n      },\n      escape: (e, el) => {\n        if (this.tribute.isActive) {\n          e.preventDefault();\n          e.stopPropagation();\n          this.tribute.isActive = false;\n          this.tribute.hideMenu();\n        }\n      },\n      tab: (e, el) => {\n        // choose first match\n        this.callbacks().enter(e, el);\n      },\n      space: (e, el) => {\n        if (this.tribute.isActive) {\n          if (this.tribute.spaceSelectsMatch) {\n            this.callbacks().enter(e, el);\n          } else if (!this.tribute.allowSpaces) {\n            e.stopPropagation();\n            setTimeout(() => {\n              this.tribute.hideMenu();\n              this.tribute.isActive = false;\n            }, 0);\n          }\n        }\n      },\n      up: (e, el) => {\n        // navigate up ul\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          let count = this.tribute.current.filteredItems.length,\n            selected = this.tribute.menuSelected;\n\n          if (count > selected && selected > 0) {\n            this.tribute.menuSelected--;\n            this.setActiveLi();\n          } else if (selected === 0) {\n            this.tribute.menuSelected = count - 1;\n            this.setActiveLi();\n            this.tribute.menu.scrollTop = this.tribute.menu.scrollHeight;\n          }\n        }\n      },\n      down: (e, el) => {\n        // navigate down ul\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          let count = this.tribute.current.filteredItems.length - 1,\n            selected = this.tribute.menuSelected;\n\n          if (count > selected) {\n            this.tribute.menuSelected++;\n            this.setActiveLi();\n          } else if (count === selected) {\n            this.tribute.menuSelected = 0;\n            this.setActiveLi();\n            this.tribute.menu.scrollTop = 0;\n          }\n        }\n      },\n      delete: (e, el) => {\n        if (\n          this.tribute.isActive &&\n          this.tribute.current.mentionText.length < 1\n        ) {\n          this.tribute.hideMenu();\n        } else if (this.tribute.isActive) {\n          this.tribute.showMenuFor(el);\n        }\n      }\n    };\n  }\n\n  setActiveLi(index) {\n    let lis = this.tribute.menu.querySelectorAll(\"li\"),\n      length = lis.length >>> 0;\n\n    if (index) this.tribute.menuSelected = parseInt(index);\n\n    for (let i = 0; i < length; i++) {\n      let li = lis[i];\n      if (i === this.tribute.menuSelected) {\n        li.classList.add(this.tribute.current.collection.selectClass);\n\n        let liClientRect = li.getBoundingClientRect();\n        let menuClientRect = this.tribute.menu.getBoundingClientRect();\n\n        if (liClientRect.bottom > menuClientRect.bottom) {\n          let scrollDistance = liClientRect.bottom - menuClientRect.bottom;\n          this.tribute.menu.scrollTop += scrollDistance;\n        } else if (liClientRect.top < menuClientRect.top) {\n          let scrollDistance = menuClientRect.top - liClientRect.top;\n          this.tribute.menu.scrollTop -= scrollDistance;\n        }\n      } else {\n        li.classList.remove(this.tribute.current.collection.selectClass);\n      }\n    }\n  }\n\n  getFullHeight(elem, includeMargin) {\n    let height = elem.getBoundingClientRect().height;\n\n    if (includeMargin) {\n      let style = elem.currentStyle || window.getComputedStyle(elem);\n      return (\n        height + parseFloat(style.marginTop) + parseFloat(style.marginBottom)\n      );\n    }\n\n    return height;\n  }\n}\n\nexport default TributeEvents;\n","class TributeMenuEvents {\n  constructor(tribute) {\n    this.tribute = tribute;\n    this.tribute.menuEvents = this;\n    this.menu = this.tribute.menu;\n  }\n\n  bind(menu) {\n    this.menuClickEvent = this.tribute.events.click.bind(null, this);\n    this.menuContainerScrollEvent = this.debounce(\n      () => {\n        if (this.tribute.isActive) {\n          this.tribute.showMenuFor(this.tribute.current.element, false);\n        }\n      },\n      300,\n      false\n    );\n    this.windowResizeEvent = this.debounce(\n      () => {\n        if (this.tribute.isActive) {\n          this.tribute.range.positionMenuAtCaret(true);\n        }\n      },\n      300,\n      false\n    );\n\n    // fixes IE11 issues with mousedown\n    this.tribute.range\n      .getDocument()\n      .addEventListener(\"MSPointerDown\", this.menuClickEvent, false);\n    this.tribute.range\n      .getDocument()\n      .addEventListener(\"mousedown\", this.menuClickEvent, false);\n    window.addEventListener(\"resize\", this.windowResizeEvent);\n\n    if (this.menuContainer) {\n      this.menuContainer.addEventListener(\n        \"scroll\",\n        this.menuContainerScrollEvent,\n        false\n      );\n    } else {\n      window.addEventListener(\"scroll\", this.menuContainerScrollEvent);\n    }\n  }\n\n  unbind(menu) {\n    this.tribute.range\n      .getDocument()\n      .removeEventListener(\"mousedown\", this.menuClickEvent, false);\n    this.tribute.range\n      .getDocument()\n      .removeEventListener(\"MSPointerDown\", this.menuClickEvent, false);\n    window.removeEventListener(\"resize\", this.windowResizeEvent);\n\n    if (this.menuContainer) {\n      this.menuContainer.removeEventListener(\n        \"scroll\",\n        this.menuContainerScrollEvent,\n        false\n      );\n    } else {\n      window.removeEventListener(\"scroll\", this.menuContainerScrollEvent);\n    }\n  }\n\n  debounce(func, wait, immediate) {\n    var timeout;\n    return () => {\n      var context = this,\n        args = arguments;\n      var later = () => {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  }\n}\n\nexport default TributeMenuEvents;\n","// Thanks to https://github.com/jeff-collins/ment.io\nimport \"./utils\";\n\nclass TributeRange {\n    constructor(tribute) {\n        this.tribute = tribute\n        this.tribute.range = this\n    }\n\n    getDocument() {\n        let iframe\n        if (this.tribute.current.collection) {\n            iframe = this.tribute.current.collection.iframe\n        }\n\n        if (!iframe) {\n            return document\n        }\n\n        return iframe.contentWindow.document\n    }\n\n    positionMenuAtCaret(scrollTo) {\n        let context = this.tribute.current,\n            coordinates\n\n        let info = this.getTriggerInfo(false, this.tribute.hasTrailingSpace, true, this.tribute.allowSpaces, this.tribute.autocompleteMode)\n\n        if (typeof info !== 'undefined') {\n\n            if(!this.tribute.positionMenu){\n                this.tribute.menu.style.cssText = `display: block;`\n                return\n            }\n\n            if (!this.isContentEditable(context.element)) {\n                coordinates = this.getTextAreaOrInputUnderlinePosition(this.tribute.current.element,\n                    info.mentionPosition)\n            }\n            else {\n                coordinates = this.getContentEditableCaretPosition(info.mentionPosition)\n            }\n\n            this.tribute.menu.style.cssText = `top: ${coordinates.top}px;\n                                     left: ${coordinates.left}px;\n                                     right: ${coordinates.right}px;\n                                     bottom: ${coordinates.bottom}px;\n                                     position: absolute;\n                                     display: block;`\n\n            if (coordinates.left === 'auto') {\n                this.tribute.menu.style.left = 'auto'\n            }\n\n            if (coordinates.top === 'auto') {\n                this.tribute.menu.style.top = 'auto'\n            }\n\n            if (scrollTo) this.scrollIntoView()\n\n            window.setTimeout(() => {\n                let menuDimensions = {\n                   width: this.tribute.menu.offsetWidth,\n                   height: this.tribute.menu.offsetHeight\n                }\n                let menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\n\n                let menuIsOffScreenHorizontally = window.innerWidth > menuDimensions.width && (menuIsOffScreen.left || menuIsOffScreen.right)\n                let menuIsOffScreenVertically = window.innerHeight > menuDimensions.height && (menuIsOffScreen.top || menuIsOffScreen.bottom)\n                if (menuIsOffScreenHorizontally || menuIsOffScreenVertically) {\n                    this.tribute.menu.style.cssText = 'display: none'\n                    this.positionMenuAtCaret(scrollTo)\n                }\n            }, 0)\n\n        } else {\n            this.tribute.menu.style.cssText = 'display: none'\n        }\n    }\n\n    get menuContainerIsBody() {\n        return this.tribute.menuContainer === document.body || !this.tribute.menuContainer;\n    }\n\n\n    selectElement(targetElement, path, offset) {\n        let range\n        let elem = targetElement\n\n        if (path) {\n            for (var i = 0; i < path.length; i++) {\n                elem = elem.childNodes[path[i]]\n                if (elem === undefined) {\n                    return\n                }\n                while (elem.length < offset) {\n                    offset -= elem.length\n                    elem = elem.nextSibling\n                }\n                if (elem.childNodes.length === 0 && !elem.length) {\n                    elem = elem.previousSibling\n                }\n            }\n        }\n        let sel = this.getWindowSelection()\n\n        range = this.getDocument().createRange()\n        range.setStart(elem, offset)\n        range.setEnd(elem, offset)\n        range.collapse(true)\n\n        try {\n            sel.removeAllRanges()\n        } catch (error) {}\n\n        sel.addRange(range)\n        targetElement.focus()\n    }\n\n    replaceTriggerText(text, requireLeadingSpace, hasTrailingSpace, originalEvent, item) {\n        let info = this.tribute.current.info;//this.getTriggerInfo(true, hasTrailingSpace, requireLeadingSpace, this.tribute.allowSpaces, this.tribute.autocompleteMode)\n\n        if (info !== undefined) {\n            let context = this.tribute.current\n            let replaceEvent = new CustomEvent('tribute-replaced', {\n                detail: {\n                    item: item,\n                    instance: context,\n                    context: info,\n                    event: originalEvent,\n                }\n            })\n\n            if (!this.isContentEditable(context.element)) {\n                let myField = this.tribute.current.element\n                let textSuffix = typeof this.tribute.replaceTextSuffix == 'string'\n                    ? this.tribute.replaceTextSuffix\n                    : ' '\n                text += textSuffix\n                let startPos = info.mentionPosition\n                let endPos = info.mentionPosition + info.mentionText.length + textSuffix.length\n                if (!this.tribute.autocompleteMode) {\n                    endPos += info.mentionTriggerChar.length - 1\n                }\n                myField.value = myField.value.substring(0, startPos) + text +\n                    myField.value.substring(endPos, myField.value.length)\n                myField.selectionStart = startPos + text.length\n                myField.selectionEnd = startPos + text.length\n            } else {\n                // add a space to the end of the pasted text\n                let textSuffix = typeof this.tribute.replaceTextSuffix == 'string'\n                    ? this.tribute.replaceTextSuffix\n                    : '\\xA0'\n                text += textSuffix\n                let endPos = info.mentionPosition + info.mentionText.length\n                if (!this.tribute.autocompleteMode) {\n                    endPos += info.mentionTriggerChar.length\n                }\n                this.pasteHtml(text, info.mentionPosition, endPos)\n            }\n\n            context.element.dispatchEvent(new CustomEvent('input', { bubbles: true }))\n            context.element.dispatchEvent(replaceEvent)\n            context.element.focus()\n        }\n    }\n\n    pasteHtml(html, startPos, endPos) {\n        let range, sel\n        sel = this.getWindowSelection()\n        range = this.getDocument().createRange()\n\n        sel.anchorNode.nodeValue = sel.anchorNode.nodeValue.substring(0, startPos)\n            + html + sel.anchorNode.nodeValue.substring(endPos, sel.anchorNode.nodeValue.length)\n        range.setStart(sel.anchorNode, startPos + html.length)\n        range.collapse(true)\n        sel.removeAllRanges()\n        sel.addRange(range)\n    }\n\n    getWindowSelection() {\n        if (this.tribute.collection.iframe) {\n            return this.tribute.collection.iframe.contentWindow.getSelection()\n        }\n\n        return window.getSelection()\n    }\n\n    getNodePositionInParent(element) {\n        if (element.parentNode === null) {\n            return 0\n        }\n\n        for (var i = 0; i < element.parentNode.childNodes.length; i++) {\n            let node = element.parentNode.childNodes[i]\n\n            if (node === element) {\n                return i\n            }\n        }\n    }\n\n    getContentEditableSelectedPath(ctx) {\n        let sel = this.getWindowSelection()\n        let selected = sel.anchorNode\n        let path = []\n        let offset\n\n        if (selected != null) {\n            let i\n            let ce = selected.contentEditable\n            while (selected !== null && ce !== 'true') {\n                i = this.getNodePositionInParent(selected)\n                path.push(i)\n                selected = selected.parentNode\n                if (selected !== null) {\n                    ce = selected.contentEditable\n                }\n            }\n            path.reverse()\n\n            // getRangeAt may not exist, need alternative\n            offset = sel.getRangeAt(0).startOffset\n\n            return {\n                selected: selected,\n                path: path,\n                offset: offset\n            }\n        }\n    }\n\n    getTextPrecedingCurrentSelection() {\n        let context = this.tribute.current,\n            text = ''\n\n        if (!this.isContentEditable(context.element)) {\n            let textComponent = this.tribute.current.element;\n            if (textComponent) {\n                let startPos = textComponent.selectionStart\n                if (textComponent.value && startPos >= 0) {\n                    text = textComponent.value.substring(0, startPos)\n                }\n            }\n\n        } else {\n            let selectedElem = this.getWindowSelection().anchorNode\n\n            if (selectedElem != null) {\n                let workingNodeContent = selectedElem.textContent\n                let selectStartOffset = this.getWindowSelection().getRangeAt(0).startOffset\n\n                if (workingNodeContent && selectStartOffset >= 0) {\n                    text = workingNodeContent.substring(0, selectStartOffset)\n                }\n            }\n        }\n\n        return text\n    }\n\n    getLastWordInText(text) {\n        text = text.replace(/\\u00A0/g, ' '); // https://stackoverflow.com/questions/29850407/how-do-i-replace-unicode-character-u00a0-with-a-space-in-javascript\n        var wordsArray;\n        if (this.tribute.autocompleteSeparator) {\n            wordsArray = text.split(this.tribute.autocompleteSeparator);\n        } else {\n            wordsArray = text.split(/\\s+/);\n        }\n        var worldsCount = wordsArray.length - 1;\n        return wordsArray[worldsCount].trim();\n    }\n\n    getTriggerInfo(menuAlreadyActive, hasTrailingSpace, requireLeadingSpace, allowSpaces, isAutocomplete) {\n        let ctx = this.tribute.current\n        let selected, path, offset\n\n        if (!this.isContentEditable(ctx.element)) {\n            selected = this.tribute.current.element\n        } else {\n            let selectionInfo = this.getContentEditableSelectedPath(ctx)\n\n            if (selectionInfo) {\n                selected = selectionInfo.selected\n                path = selectionInfo.path\n                offset = selectionInfo.offset\n            }\n        }\n\n        let effectiveRange = this.getTextPrecedingCurrentSelection()\n        let lastWordOfEffectiveRange = this.getLastWordInText(effectiveRange)\n\n        if (isAutocomplete) {\n            return {\n                mentionPosition: effectiveRange.length - lastWordOfEffectiveRange.length,\n                mentionText: lastWordOfEffectiveRange,\n                fullText: effectiveRange,\n                mentionSelectedElement: selected,\n                mentionSelectedPath: path,\n                mentionSelectedOffset: offset\n            }\n        }\n\n        if (effectiveRange !== undefined && effectiveRange !== null) {\n            let mostRecentTriggerCharPos = -1\n            let triggerChar\n\n            this.tribute.collection.forEach(config => {\n                let c = config.trigger\n                let idx = config.requireLeadingSpace ?\n                    this.lastIndexWithLeadingSpace(effectiveRange, c) :\n                    effectiveRange.lastIndexOf(c)\n\n                if (idx > mostRecentTriggerCharPos) {\n                    mostRecentTriggerCharPos = idx\n                    triggerChar = c\n                    requireLeadingSpace = config.requireLeadingSpace\n                }\n            })\n\n            if (mostRecentTriggerCharPos >= 0 &&\n                (\n                    mostRecentTriggerCharPos === 0 ||\n                    !requireLeadingSpace ||\n                    /[\\xA0\\s]/g.test(\n                        effectiveRange.substring(\n                            mostRecentTriggerCharPos - 1,\n                            mostRecentTriggerCharPos)\n                    )\n                )\n            ) {\n                let currentTriggerSnippet = effectiveRange.substring(mostRecentTriggerCharPos + triggerChar.length,\n                    effectiveRange.length)\n\n                triggerChar = effectiveRange.substring(mostRecentTriggerCharPos, mostRecentTriggerCharPos + triggerChar.length)\n                let firstSnippetChar = currentTriggerSnippet.substring(0, 1)\n                let leadingSpace = currentTriggerSnippet.length > 0 &&\n                    (\n                        firstSnippetChar === ' ' ||\n                        firstSnippetChar === '\\xA0'\n                    )\n                if (hasTrailingSpace) {\n                    currentTriggerSnippet = currentTriggerSnippet.trim()\n                }\n\n                let regex = allowSpaces ? /[^\\S ]/g : /[\\xA0\\s]/g;\n\n                this.tribute.hasTrailingSpace = regex.test(currentTriggerSnippet);\n\n                if (!leadingSpace && (menuAlreadyActive || !(regex.test(currentTriggerSnippet)))) {\n                    return {\n                        mentionPosition: mostRecentTriggerCharPos,\n                        mentionText: currentTriggerSnippet,\n                        mentionSelectedElement: selected,\n                        mentionSelectedPath: path,\n                        mentionSelectedOffset: offset,\n                        mentionTriggerChar: triggerChar\n                    }\n                }\n            }\n        }\n    }\n\n    lastIndexWithLeadingSpace (str, trigger) {\n        let reversedStr = str.split('').reverse().join('')\n        let index = -1\n\n        for (let cidx = 0, len = str.length; cidx < len; cidx++) {\n            let firstChar = cidx === str.length - 1\n            let leadingSpace = /\\s/.test(reversedStr[cidx + 1])\n\n            let match = true\n            for (let triggerIdx = trigger.length - 1; triggerIdx >= 0; triggerIdx--) {\n              if (trigger[triggerIdx] !== reversedStr[cidx-triggerIdx]) {\n                match = false\n                break\n              }\n            }\n\n            if (match && (firstChar || leadingSpace)) {\n                index = str.length - 1 - cidx\n                break\n            }\n        }\n\n        return index\n    }\n\n    isContentEditable(element) {\n        return element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA'\n    }\n\n    isMenuOffScreen(coordinates, menuDimensions) {\n        let windowWidth = window.innerWidth\n        let windowHeight = window.innerHeight\n        let doc = document.documentElement\n        let windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0)\n        let windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\n\n        let menuTop = typeof coordinates.top === 'number' ? coordinates.top : windowTop + windowHeight - coordinates.bottom - menuDimensions.height\n        let menuRight = typeof coordinates.right === 'number' ? coordinates.right : coordinates.left + menuDimensions.width\n        let menuBottom = typeof coordinates.bottom === 'number' ? coordinates.bottom : coordinates.top + menuDimensions.height\n        let menuLeft = typeof coordinates.left === 'number' ? coordinates.left : windowLeft + windowWidth - coordinates.right - menuDimensions.width\n\n        return {\n            top: menuTop < Math.floor(windowTop),\n            right: menuRight > Math.ceil(windowLeft + windowWidth),\n            bottom: menuBottom > Math.ceil(windowTop + windowHeight),\n            left: menuLeft < Math.floor(windowLeft)\n        }\n    }\n\n    getMenuDimensions() {\n        // Width of the menu depends of its contents and position\n        // We must check what its width would be without any obstruction\n        // This way, we can achieve good positioning for flipping the menu\n        let dimensions = {\n            width: null,\n            height: null\n        }\n\n        this.tribute.menu.style.cssText = `top: 0px;\n                                 left: 0px;\n                                 position: fixed;\n                                 display: block;\n                                 visibility; hidden;`\n       dimensions.width = this.tribute.menu.offsetWidth\n       dimensions.height = this.tribute.menu.offsetHeight\n\n       this.tribute.menu.style.cssText = `display: none;`\n\n       return dimensions\n    }\n\n    getTextAreaOrInputUnderlinePosition(element, position, flipped) {\n        let properties = ['direction', 'boxSizing', 'width', 'height', 'overflowX',\n            'overflowY', 'borderTopWidth', 'borderRightWidth',\n            'borderBottomWidth', 'borderLeftWidth', 'paddingTop',\n            'paddingRight', 'paddingBottom', 'paddingLeft',\n            'fontStyle', 'fontVariant', 'fontWeight', 'fontStretch',\n            'fontSize', 'fontSizeAdjust', 'lineHeight', 'fontFamily',\n            'textAlign', 'textTransform', 'textIndent',\n            'textDecoration', 'letterSpacing', 'wordSpacing'\n        ]\n\n        let isFirefox = (window.mozInnerScreenX !== null)\n\n        let div = this.getDocument().createElement('div')\n        div.id = 'input-textarea-caret-position-mirror-div'\n        this.getDocument().body.appendChild(div)\n\n        let style = div.style\n        let computed = window.getComputedStyle ? getComputedStyle(element) : element.currentStyle\n\n        style.whiteSpace = 'pre-wrap'\n        if (element.nodeName !== 'INPUT') {\n            style.wordWrap = 'break-word'\n        }\n\n        // position off-screen\n        style.position = 'absolute'\n        style.visibility = 'hidden'\n\n        // transfer the element's properties to the div\n        properties.forEach(prop => {\n            style[prop] = computed[prop]\n        })\n\n        if (isFirefox) {\n            style.width = `${(parseInt(computed.width) - 2)}px`\n            if (element.scrollHeight > parseInt(computed.height))\n                style.overflowY = 'scroll'\n        } else {\n            style.overflow = 'hidden'\n        }\n\n        div.textContent = element.value.substring(0, position)\n\n        if (element.nodeName === 'INPUT') {\n            div.textContent = div.textContent.replace(/\\s/g, ' ')\n        }\n\n        let span = this.getDocument().createElement('span')\n        span.textContent = element.value.substring(position) || '.'\n        div.appendChild(span)\n\n        let rect = element.getBoundingClientRect()\n        let doc = document.documentElement\n        let windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0)\n        let windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\n\n        let top = 0;\n        let left = 0;\n        if (this.menuContainerIsBody) {\n          top = rect.top;\n          left = rect.left;\n        }\n\n        let coordinates = {\n            top: top + windowTop + span.offsetTop + parseInt(computed.borderTopWidth) + parseInt(computed.fontSize) - element.scrollTop,\n            left: left + windowLeft + span.offsetLeft + parseInt(computed.borderLeftWidth)\n        }\n\n        let windowWidth = window.innerWidth\n        let windowHeight = window.innerHeight\n\n        let menuDimensions = this.getMenuDimensions()\n        let menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\n\n        if (menuIsOffScreen.right) {\n            coordinates.right = windowWidth - coordinates.left\n            coordinates.left = 'auto'\n        }\n\n        let parentHeight = this.tribute.menuContainer\n            ? this.tribute.menuContainer.offsetHeight\n            : this.getDocument().body.offsetHeight\n\n        if (menuIsOffScreen.bottom) {\n            let parentRect = this.tribute.menuContainer\n                ? this.tribute.menuContainer.getBoundingClientRect()\n                : this.getDocument().body.getBoundingClientRect()\n            let scrollStillAvailable = parentHeight - (windowHeight - parentRect.top)\n\n            coordinates.bottom = scrollStillAvailable + (windowHeight - rect.top - span.offsetTop)\n            coordinates.top = 'auto'\n        }\n\n        menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\n        if (menuIsOffScreen.left) {\n            coordinates.left = windowWidth > menuDimensions.width\n                ? windowLeft + windowWidth - menuDimensions.width\n                : windowLeft\n            delete coordinates.right\n        }\n        if (menuIsOffScreen.top) {\n            coordinates.top = windowHeight > menuDimensions.height\n                ? windowTop + windowHeight - menuDimensions.height\n                : windowTop\n            delete coordinates.bottom\n        }\n\n        this.getDocument().body.removeChild(div)\n        return coordinates\n    }\n\n    getContentEditableCaretPosition(selectedNodePosition) {\n        let range\n        let sel = this.getWindowSelection()\n\n        range = this.getDocument().createRange()\n        range.setStart(sel.anchorNode, selectedNodePosition)\n        range.setEnd(sel.anchorNode, selectedNodePosition)\n\n        range.collapse(false)\n\n        let rect = range.getBoundingClientRect()\n        let doc = document.documentElement\n        let windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0)\n        let windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\n\n        let left = rect.left\n        let top = rect.top\n\n        let coordinates = {\n            left: left + windowLeft,\n            top: top + rect.height + windowTop\n        }\n        let windowWidth = window.innerWidth\n        let windowHeight = window.innerHeight\n\n        let menuDimensions = this.getMenuDimensions()\n        let menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\n\n        if (menuIsOffScreen.right) {\n            coordinates.left = 'auto'\n            coordinates.right = windowWidth - rect.left - windowLeft\n        }\n\n        let parentHeight = this.tribute.menuContainer\n            ? this.tribute.menuContainer.offsetHeight\n            : this.getDocument().body.offsetHeight\n\n        if (menuIsOffScreen.bottom) {\n            let parentRect = this.tribute.menuContainer\n                ? this.tribute.menuContainer.getBoundingClientRect()\n                : this.getDocument().body.getBoundingClientRect()\n            let scrollStillAvailable = parentHeight - (windowHeight - parentRect.top)\n\n            coordinates.top = 'auto'\n            coordinates.bottom = scrollStillAvailable + (windowHeight - rect.top)\n        }\n\n        menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\n        if (menuIsOffScreen.left) {\n            coordinates.left = windowWidth > menuDimensions.width\n                ? windowLeft + windowWidth - menuDimensions.width\n                : windowLeft\n            delete coordinates.right\n        }\n        if (menuIsOffScreen.top) {\n            coordinates.top = windowHeight > menuDimensions.height\n                ? windowTop + windowHeight - menuDimensions.height\n                : windowTop\n            delete coordinates.bottom\n        }\n\n        if (!this.menuContainerIsBody) {\n            coordinates.left = coordinates.left ? coordinates.left - this.tribute.menuContainer.offsetLeft : coordinates.left\n            coordinates.top = coordinates.top ? coordinates.top - this.tribute.menuContainer.offsetTop : coordinates.top\n        }\n\n        return coordinates\n    }\n\n    scrollIntoView(elem) {\n        let reasonableBuffer = 20,\n            clientRect\n        let maxScrollDisplacement = 100\n        let e = this.menu\n\n        if (typeof e === 'undefined') return;\n\n        while (clientRect === undefined || clientRect.height === 0) {\n            clientRect = e.getBoundingClientRect()\n\n            if (clientRect.height === 0) {\n                e = e.childNodes[0]\n                if (e === undefined || !e.getBoundingClientRect) {\n                    return\n                }\n            }\n        }\n\n        let elemTop = clientRect.top\n        let elemBottom = elemTop + clientRect.height\n\n        if (elemTop < 0) {\n            window.scrollTo(0, window.pageYOffset + clientRect.top - reasonableBuffer)\n        } else if (elemBottom > window.innerHeight) {\n            let maxY = window.pageYOffset + clientRect.top - reasonableBuffer\n\n            if (maxY - window.pageYOffset > maxScrollDisplacement) {\n                maxY = window.pageYOffset + maxScrollDisplacement\n            }\n\n            let targetY = window.pageYOffset - (window.innerHeight - elemBottom)\n\n            if (targetY > maxY) {\n                targetY = maxY\n            }\n\n            window.scrollTo(0, targetY)\n        }\n    }\n}\n\n\nexport default TributeRange;\n","// Thanks to https://github.com/mattyork/fuzzy\nclass TributeSearch {\n    constructor(tribute) {\n        this.tribute = tribute\n        this.tribute.search = this\n    }\n\n    simpleFilter(pattern, array) {\n        return array.filter(string => {\n            return this.test(pattern, string)\n        })\n    }\n\n    test(pattern, string) {\n        return this.match(pattern, string) !== null\n    }\n\n    match(pattern, string, opts) {\n        opts = opts || {}\n        let patternIdx = 0,\n            result = [],\n            len = string.length,\n            totalScore = 0,\n            currScore = 0,\n            pre = opts.pre || '',\n            post = opts.post || '',\n            compareString = opts.caseSensitive && string || string.toLowerCase(),\n            ch, compareChar\n\n        if (opts.skip) {\n            return {rendered: string, score: 0}\n        }\n\n        pattern = opts.caseSensitive && pattern || pattern.toLowerCase()\n\n        let patternCache = this.traverse(compareString, pattern, 0, 0, [])\n        if (!patternCache) {\n            return null\n        }\n        return {\n            rendered: this.render(string, patternCache.cache, pre, post),\n            score: patternCache.score\n        }\n    }\n\n    traverse(string, pattern, stringIndex, patternIndex, patternCache) {\n        if (this.tribute.autocompleteSeparator) {\n            // if the pattern search at end\n            pattern = pattern.split(this.tribute.autocompleteSeparator).splice(-1)[0];\n        }\n\n        if (pattern.length === patternIndex) {\n\n            // calculate score and copy the cache containing the indices where it's found\n            return {\n                score: this.calculateScore(patternCache),\n                cache: patternCache.slice()\n            }\n        }\n\n        // if string at end or remaining pattern > remaining string\n        if (string.length === stringIndex || pattern.length - patternIndex > string.length - stringIndex) {\n            return undefined\n        }\n\n        let c = pattern[patternIndex]\n        let index = string.indexOf(c, stringIndex)\n        let best, temp\n\n        while (index > -1) {\n            patternCache.push(index)\n            temp = this.traverse(string, pattern, index + 1, patternIndex + 1, patternCache)\n            patternCache.pop()\n\n            // if downstream traversal failed, return best answer so far\n            if (!temp) {\n                return best\n            }\n\n            if (!best || best.score < temp.score) {\n                best = temp\n            }\n\n            index = string.indexOf(c, index + 1)\n        }\n\n        return best\n    }\n\n    calculateScore(patternCache) {\n        let score = 0\n        let temp = 1\n\n        patternCache.forEach((index, i) => {\n            if (i > 0) {\n                if (patternCache[i - 1] + 1 === index) {\n                    temp += temp + 1\n                }\n                else {\n                    temp = 1\n                }\n            }\n\n            score += temp\n        })\n\n        return score\n    }\n\n    render(string, indices, pre, post) {\n        var rendered = string.substring(0, indices[0])\n\n        indices.forEach((index, i) => {\n            rendered += pre + string[index] + post +\n                string.substring(index + 1, (indices[i + 1]) ? indices[i + 1] : string.length)\n        })\n\n        return rendered\n    }\n\n    filter(pattern, arr, opts) {\n        opts = opts || {}\n        return arr\n            .reduce((prev, element, idx, arr) => {\n                let str = element\n\n                if (opts.extract) {\n                    str = opts.extract(element)\n\n                    if (!str) { // take care of undefineds / nulls / etc.\n                        str = ''\n                    }\n                }\n\n                let rendered = this.match(pattern, str, opts)\n\n                if (rendered != null) {\n                    prev[prev.length] = {\n                        string: rendered.rendered,\n                        score: rendered.score,\n                        index: idx,\n                        original: element\n                    }\n                }\n\n                return prev\n            }, [])\n\n        .sort((a, b) => {\n            let compare = b.score - a.score\n            if (compare) return compare\n            return a.index - b.index\n        })\n    }\n}\n\nexport default TributeSearch;\n","import \"./utils\";\nimport TributeEvents from \"./TributeEvents\";\nimport TributeMenuEvents from \"./TributeMenuEvents\";\nimport TributeRange from \"./TributeRange\";\nimport TributeSearch from \"./TributeSearch\";\n\nclass Tribute {\n  constructor({\n    values = null,\n    iframe = null,\n    selectClass = \"highlight\",\n    containerClass = \"tribute-container\",\n    itemClass = \"\",\n    trigger = \"@\",\n    autocompleteMode = false,\n    autocompleteSeparator = null,\n    selectTemplate = null,\n    menuItemTemplate = null,\n    lookup = \"key\",\n    fillAttr = \"value\",\n    collection = null,\n    menuContainer = null,\n    noMatchTemplate = null,\n    requireLeadingSpace = true,\n    allowSpaces = false,\n    replaceTextSuffix = null,\n    positionMenu = true,\n    spaceSelectsMatch = false,\n    searchOpts = {},\n    menuItemLimit = null,\n    menuShowMinLength = 0\n  }) {\n    this.autocompleteMode = autocompleteMode;\n    this.autocompleteSeparator = autocompleteSeparator;\n    this.menuSelected = 0;\n    this.current = {};\n    this.inputEvent = false;\n    this.isActive = false;\n    this.menuContainer = menuContainer;\n    this.allowSpaces = allowSpaces;\n    this.replaceTextSuffix = replaceTextSuffix;\n    this.positionMenu = positionMenu;\n    this.hasTrailingSpace = false;\n    this.spaceSelectsMatch = spaceSelectsMatch;\n\n    if (this.autocompleteMode) {\n      trigger = \"\";\n      allowSpaces = false;\n    }\n\n    if (values) {\n      this.collection = [\n        {\n          // symbol that starts the lookup\n          trigger: trigger,\n\n          // is it wrapped in an iframe\n          iframe: iframe,\n\n          // class applied to selected item\n          selectClass: selectClass,\n\n          // class applied to the Container\n          containerClass: containerClass,\n\n          // class applied to each item\n          itemClass: itemClass,\n\n          // function called on select that retuns the content to insert\n          selectTemplate: (\n            selectTemplate || Tribute.defaultSelectTemplate\n          ).bind(this),\n\n          // function called that returns content for an item\n          menuItemTemplate: (\n            menuItemTemplate || Tribute.defaultMenuItemTemplate\n          ).bind(this),\n\n          // function called when menu is empty, disables hiding of menu.\n          noMatchTemplate: (t => {\n            if (typeof t === \"string\") {\n              if (t.trim() === \"\") return null;\n              return t;\n            }\n            if (typeof t === \"function\") {\n              return t.bind(this);\n            }\n\n            return (\n              noMatchTemplate ||\n              function() {\n                return \"<li>No Match Found!</li>\";\n              }.bind(this)\n            );\n          })(noMatchTemplate),\n\n          // column to search against in the object\n          lookup: lookup,\n\n          // column that contains the content to insert by default\n          fillAttr: fillAttr,\n\n          // array of objects or a function returning an array of objects\n          values: values,\n\n          requireLeadingSpace: requireLeadingSpace,\n\n          searchOpts: searchOpts,\n\n          menuItemLimit: menuItemLimit,\n\n          menuShowMinLength: menuShowMinLength\n        }\n      ];\n    } else if (collection) {\n      if (this.autocompleteMode)\n        console.warn(\n          \"Tribute in autocomplete mode does not work for collections\"\n        );\n      this.collection = collection.map(item => {\n        return {\n          trigger: item.trigger || trigger,\n          iframe: item.iframe || iframe,\n          selectClass: item.selectClass || selectClass,\n          containerClass: item.containerClass || containerClass,\n          itemClass: item.itemClass || itemClass,\n          selectTemplate: (\n            item.selectTemplate || Tribute.defaultSelectTemplate\n          ).bind(this),\n          menuItemTemplate: (\n            item.menuItemTemplate || Tribute.defaultMenuItemTemplate\n          ).bind(this),\n          // function called when menu is empty, disables hiding of menu.\n          noMatchTemplate: (t => {\n            if (typeof t === \"string\") {\n              if (t.trim() === \"\") return null;\n              return t;\n            }\n            if (typeof t === \"function\") {\n              return t.bind(this);\n            }\n\n            return (\n              noMatchTemplate ||\n              function() {\n                return \"<li>No Match Found!</li>\";\n              }.bind(this)\n            );\n          })(noMatchTemplate),\n          lookup: item.lookup || lookup,\n          fillAttr: item.fillAttr || fillAttr,\n          values: item.values,\n          requireLeadingSpace: item.requireLeadingSpace,\n          searchOpts: item.searchOpts || searchOpts,\n          menuItemLimit: item.menuItemLimit || menuItemLimit,\n          menuShowMinLength: item.menuShowMinLength || menuShowMinLength\n        };\n      });\n    } else {\n      throw new Error(\"[Tribute] No collection specified.\");\n    }\n\n    new TributeRange(this);\n    new TributeEvents(this);\n    new TributeMenuEvents(this);\n    new TributeSearch(this);\n  }\n\n  get isActive() {\n    return this._isActive;\n  }\n\n  set isActive(val) {\n    if (this._isActive != val) {\n      this._isActive = val;\n      if (this.current.element) {\n        let noMatchEvent = new CustomEvent(`tribute-active-${val}`);\n        this.current.element.dispatchEvent(noMatchEvent);\n      }\n    }\n  }\n\n  static defaultSelectTemplate(item) {\n    if (typeof item === \"undefined\")\n      return `${this.current.collection.trigger}${this.current.mentionText}`;\n    if (this.range.isContentEditable(this.current.element)) {\n      return (\n        '<span class=\"tribute-mention\">' +\n        (this.current.collection.trigger +\n          item.original[this.current.collection.fillAttr]) +\n        \"</span>\"\n      );\n    }\n\n    return (\n      this.current.collection.trigger +\n      item.original[this.current.collection.fillAttr]\n    );\n  }\n\n  static defaultMenuItemTemplate(matchItem) {\n    return matchItem.string;\n  }\n\n  static inputTypes() {\n    return [\"TEXTAREA\", \"INPUT\"];\n  }\n\n  triggers() {\n    return this.collection.map(config => {\n      return config.trigger;\n    });\n  }\n\n  attach(el) {\n    if (!el) {\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\n    }\n\n    // Check if it is a jQuery collection\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\n      el = el.get();\n    }\n\n    // Is el an Array/Array-like object?\n    if (\n      el.constructor === NodeList ||\n      el.constructor === HTMLCollection ||\n      el.constructor === Array\n    ) {\n      let length = el.length;\n      for (var i = 0; i < length; ++i) {\n        this._attach(el[i]);\n      }\n    } else {\n      this._attach(el);\n    }\n  }\n\n  _attach(el) {\n    if (el.hasAttribute(\"data-tribute\")) {\n      console.warn(\"Tribute was already bound to \" + el.nodeName);\n    }\n\n    this.ensureEditable(el);\n    this.events.bind(el);\n    el.setAttribute(\"data-tribute\", true);\n  }\n\n  ensureEditable(element) {\n    if (Tribute.inputTypes().indexOf(element.nodeName) === -1) {\n      if (element.contentEditable) {\n        element.contentEditable = true;\n      } else {\n        throw new Error(\"[Tribute] Cannot bind to \" + element.nodeName);\n      }\n    }\n  }\n\n  createMenu(containerClass) {\n    let wrapper = this.range.getDocument().createElement(\"div\"),\n      ul = this.range.getDocument().createElement(\"ul\");\n    wrapper.className = containerClass;\n    wrapper.setAttribute(\"tabindex\", \"0\"); \n    wrapper.appendChild(ul);\n    wrapper.boundKeydown = this.events.keydown.bind(this, this.events, true);\n    wrapper.boundKeyup = this.events.keyup.bind(this, this.events, true);\n    wrapper.boundInput = this.events.input.bind(this, this.events, true);\n    wrapper.addEventListener(\"keydown\", wrapper.boundKeydown, false);\n    wrapper.addEventListener(\"keyup\", wrapper.boundKeyup, false);\n    wrapper.addEventListener(\"input\",  wrapper.boundInput, false);\n\n    if (this.menuContainer) {\n      return this.menuContainer.appendChild(wrapper);\n    }\n\n    return this.range.getDocument().body.appendChild(wrapper);\n  }\n\n  showMenuFor(element, scrollTo) {\n    // Only proceed if menu isn't already shown for the current element & mentionText\n    if (\n      this.isActive &&\n      this.current.element === element &&\n      this.current.mentionText === this.currentMentionTextSnapshot\n    ) {\n      return;\n    }\n    this.currentMentionTextSnapshot = this.current.mentionText;\n\n    // create the menu if it doesn't exist.\n    if (!this.menu) {\n      this.menu = this.createMenu(this.current.collection.containerClass);\n      element.tributeMenu = this.menu;\n      this.menuEvents.bind(this.menu);\n    }\n\n    this.isActive = true;\n    this.menuSelected = 0;\n\n    if (!this.current.mentionText) {\n      this.current.mentionText = \"\";\n    }\n\n    const processValues = values => {\n      // Tribute may not be active any more by the time the value callback returns\n      if (!this.isActive) {\n        return;\n      }\n\n      let items = this.search.filter(this.current.mentionText, values, {\n        pre: this.current.collection.searchOpts.pre || \"<span>\",\n        post: this.current.collection.searchOpts.post || \"</span>\",\n        skip: this.current.collection.searchOpts.skip,\n        extract: el => {\n          if (typeof this.current.collection.lookup === \"string\") {\n            return el[this.current.collection.lookup];\n          } else if (typeof this.current.collection.lookup === \"function\") {\n            return this.current.collection.lookup(el, this.current.mentionText);\n          } else {\n            throw new Error(\n              \"Invalid lookup attribute, lookup must be string or function.\"\n            );\n          }\n        }\n      });\n\n      if (this.current.collection.menuItemLimit) {\n        items = items.slice(0, this.current.collection.menuItemLimit);\n      }\n\n      this.current.filteredItems = items;\n\n      let ul = this.menu.querySelector(\"ul\");\n\n      this.range.positionMenuAtCaret(scrollTo);\n\n      if (!items.length) {\n        let noMatchEvent = new CustomEvent(\"tribute-no-match\", {\n          detail: this.menu\n        });\n        this.current.element.dispatchEvent(noMatchEvent);\n        if (\n          (typeof this.current.collection.noMatchTemplate === \"function\" &&\n            !this.current.collection.noMatchTemplate()) ||\n          !this.current.collection.noMatchTemplate\n        ) {\n          this.hideMenu();\n        } else {\n          typeof this.current.collection.noMatchTemplate === \"function\"\n            ? (ul.innerHTML = this.current.collection.noMatchTemplate())\n            : (ul.innerHTML = this.current.collection.noMatchTemplate);\n        }\n\n        return;\n      }\n\n      ul.innerHTML = \"\";\n      let fragment = this.range.getDocument().createDocumentFragment();\n\n      items.forEach((item, index) => {\n        let li = this.range.getDocument().createElement(\"li\");\n        li.setAttribute(\"data-index\", index);\n        li.className = this.current.collection.itemClass;\n        li.addEventListener(\"mousemove\", e => {\n          let [li, index] = this._findLiTarget(e.target);\n          if (e.movementY !== 0) {\n            this.events.setActiveLi(index);\n          }\n        });\n        if (this.menuSelected === index) {\n          li.classList.add(this.current.collection.selectClass);\n        }\n        li.innerHTML = this.current.collection.menuItemTemplate(item);\n        fragment.appendChild(li);\n      });\n      ul.appendChild(fragment);\n    };\n\n    if (typeof this.current.collection.values === \"function\") {\n      this.current.collection.values(this.current.fullText, processValues);\n    } else {\n      processValues(this.current.collection.values);\n    }\n  }\n\n  _findLiTarget(el) {\n    if (!el) return [];\n    const index = el.getAttribute(\"data-index\");\n    return !index ? this._findLiTarget(el.parentNode) : [el, index];\n  }\n\n  showMenuForCollection(element, collectionIndex) {\n    if (element !== document.activeElement) {\n      this.placeCaretAtEnd(element);\n    }\n\n    this.current.collection = this.collection[collectionIndex || 0];\n    this.current.externalTrigger = true;\n    this.current.element = element;\n\n    if (element.isContentEditable)\n      this.insertTextAtCursor(this.current.collection.trigger);\n    else this.insertAtCaret(element, this.current.collection.trigger);\n\n    this.showMenuFor(element);\n  }\n\n  // TODO: make sure this works for inputs/textareas\n  placeCaretAtEnd(el) {\n    el.focus();\n    if (\n      typeof window.getSelection != \"undefined\" &&\n      typeof document.createRange != \"undefined\"\n    ) {\n      var range = document.createRange();\n      range.selectNodeContents(el);\n      range.collapse(false);\n      var sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(range);\n    } else if (typeof document.body.createTextRange != \"undefined\") {\n      var textRange = document.body.createTextRange();\n      textRange.moveToElementText(el);\n      textRange.collapse(false);\n      textRange.select();\n    }\n  }\n\n  // for contenteditable\n  insertTextAtCursor(text) {\n    var sel, range, html;\n    sel = window.getSelection();\n    range = sel.getRangeAt(0);\n    range.deleteContents();\n    var textNode = document.createTextNode(text);\n    range.insertNode(textNode);\n    range.selectNodeContents(textNode);\n    range.collapse(false);\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n\n  // for regular inputs\n  insertAtCaret(textarea, text) {\n    var scrollPos = textarea.scrollTop;\n    var caretPos = textarea.selectionStart;\n\n    var front = textarea.value.substring(0, caretPos);\n    var back = textarea.value.substring(\n      textarea.selectionEnd,\n      textarea.value.length\n    );\n    textarea.value = front + text + back;\n    caretPos = caretPos + text.length;\n    textarea.selectionStart = caretPos;\n    textarea.selectionEnd = caretPos;\n    textarea.focus();\n    textarea.scrollTop = scrollPos;\n  }\n\n  hideMenu() {\n    if (this.menu) {\n      this.menu.style.cssText = \"display: none;\";\n      this.isActive = false;\n      this.current.element.focus();\n    }\n  }\n\n  selectItemAtIndex(index, originalEvent) {\n    index = parseInt(index);\n    if (typeof index !== \"number\" || isNaN(index)) return;\n    let item = this.current.filteredItems[index];\n    let content = this.current.collection.selectTemplate(item);\n    if (content !== null) this.replaceText(content, originalEvent, item);\n  }\n\n  replaceText(content, originalEvent, item) {\n    this.range.replaceTriggerText(content, true, true, originalEvent, item);\n  }\n\n  _append(collection, newValues, replace) {\n    if (typeof collection.values === \"function\") {\n      throw new Error(\"Unable to append to values, as it is a function.\");\n    } else if (!replace) {\n      collection.values = collection.values.concat(newValues);\n    } else {\n      collection.values = newValues;\n    }\n  }\n\n  append(collectionIndex, newValues, replace) {\n    let index = parseInt(collectionIndex);\n    if (typeof index !== \"number\")\n      throw new Error(\"please provide an index for the collection to update.\");\n\n    let collection = this.collection[index];\n\n    this._append(collection, newValues, replace);\n  }\n\n  appendCurrent(newValues, replace) {\n    if (this.isActive) {\n      this._append(this.current.collection, newValues, replace);\n    } else {\n      throw new Error(\n        \"No active state. Please use append instead and pass an index.\"\n      );\n    }\n  }\n\n  detach(el) {\n    if (!el) {\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\n    }\n\n    // Check if it is a jQuery collection\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\n      el = el.get();\n    }\n\n    // Is el an Array/Array-like object?\n    if (\n      el.constructor === NodeList ||\n      el.constructor === HTMLCollection ||\n      el.constructor === Array\n    ) {\n      let length = el.length;\n      for (var i = 0; i < length; ++i) {\n        this._detach(el[i]);\n      }\n    } else {\n      this._detach(el);\n    }\n  }\n\n  _detach(el) {\n    this.events.unbind(el);\n    if (el.tributeMenu) {\n      this.menuEvents.unbind(el.tributeMenu);\n    }\n\n    setTimeout(() => {\n      el.removeAttribute(\"data-tribute\");\n      this.isActive = false;\n      if (el.tributeMenu) {\n        el.tributeMenu.remove();\n      }\n    });\n  }\n}\n\nexport default Tribute;\n"],"names":["Array","prototype","find","predicate","this","TypeError","value","list","Object","length","thisArg","arguments","i","call","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","Event","TributeEvents","tribute","events","element","boundKeydown","keydown","bind","boundKeyup","keyup","boundInput","input","addEventListener","removeEventListener","instance","isMenu","shouldDeactivate","isActive","hideMenu","commandEvent","KeyboardEvent","modifiers","forEach","o","getModifierState","keys","key","keyCode","callbacks","toLowerCase","inputEvent","menu","contains","target","li","preventDefault","stopPropagation","nodeName","parentNode","Error","selectItemAtIndex","getAttribute","current","externalTrigger","setTimeout","updateSelection","allowSpaces","hasTrailingSpace","autocompleteMode","triggerChar","getKeyCode","isNaN","trigger","triggers","charCodeAt","mentionText","collection","menuShowMinLength","showMenuFor","eventKeyPressed","dispatchEvent","el","info","range","getTriggerInfo","mentionTriggerChar","selectedPath","mentionSelectedPath","fullText","selectedOffset","mentionSelectedOffset","e","_this","collectionItem","item","enter","filteredItems","menuSelected","escape","tab","space","spaceSelectsMatch","up","count","selected","setActiveLi","scrollTop","scrollHeight","down","index","lis","querySelectorAll","parseInt","classList","add","selectClass","liClientRect","getBoundingClientRect","menuClientRect","bottom","scrollDistance","top","remove","elem","includeMargin","height","style","currentStyle","getComputedStyle","parseFloat","marginTop","marginBottom","TributeMenuEvents","menuEvents","menuClickEvent","click","menuContainerScrollEvent","debounce","windowResizeEvent","positionMenuAtCaret","getDocument","menuContainer","func","wait","immediate","timeout","context","_this2","args","callNow","clearTimeout","apply","TributeRange","iframe","contentWindow","scrollTo","coordinates","positionMenu","cssText","isContentEditable","getContentEditableCaretPosition","mentionPosition","getTextAreaOrInputUnderlinePosition","left","right","scrollIntoView","menuDimensions","width","offsetWidth","offsetHeight","menuIsOffScreen","isMenuOffScreen","menuIsOffScreenHorizontally","innerWidth","menuIsOffScreenVertically","innerHeight","targetElement","path","offset","childNodes","nextSibling","previousSibling","sel","getWindowSelection","createRange","setStart","setEnd","collapse","removeAllRanges","error","addRange","focus","text","requireLeadingSpace","originalEvent","replaceEvent","replaceTextSuffix","endPos","pasteHtml","myField","textSuffix","startPos","substring","selectionStart","selectionEnd","html","anchorNode","nodeValue","getSelection","ctx","ce","contentEditable","getNodePositionInParent","push","reverse","getRangeAt","startOffset","selectedElem","workingNodeContent","textContent","selectStartOffset","textComponent","wordsArray","replace","autocompleteSeparator","split","trim","menuAlreadyActive","isAutocomplete","selectionInfo","getContentEditableSelectedPath","effectiveRange","getTextPrecedingCurrentSelection","lastWordOfEffectiveRange","getLastWordInText","mentionSelectedElement","mostRecentTriggerCharPos","config","c","idx","lastIndexWithLeadingSpace","lastIndexOf","test","currentTriggerSnippet","firstSnippetChar","leadingSpace","regex","str","reversedStr","join","cidx","len","firstChar","match","triggerIdx","windowWidth","windowHeight","doc","documentElement","windowLeft","pageXOffset","scrollLeft","clientLeft","windowTop","pageYOffset","clientTop","menuTop","menuRight","menuBottom","menuLeft","Math","floor","ceil","dimensions","position","flipped","isFirefox","mozInnerScreenX","div","createElement","id","body","appendChild","computed","whiteSpace","wordWrap","visibility","prop","overflowY","overflow","span","rect","menuContainerIsBody","offsetTop","borderTopWidth","fontSize","offsetLeft","borderLeftWidth","getMenuDimensions","parentHeight","scrollStillAvailable","removeChild","selectedNodePosition","clientRect","elemTop","elemBottom","maxY","targetY","TributeSearch","search","pattern","array","filter","string","opts","pre","post","compareString","caseSensitive","skip","rendered","score","patternCache","traverse","render","cache","stringIndex","patternIndex","splice","calculateScore","slice","best","temp","indexOf","pop","indices","arr","reduce","prev","extract","original","sort","a","b","compare","t","values","containerClass","itemClass","selectTemplate","menuItemTemplate","lookup","fillAttr","noMatchTemplate","searchOpts","menuItemLimit","Tribute","defaultSelectTemplate","defaultMenuItemTemplate","console","warn","map","jQuery","get","constructor","NodeList","HTMLCollection","_attach","hasAttribute","ensureEditable","setAttribute","inputTypes","wrapper","ul","className","currentMentionTextSnapshot","createMenu","tributeMenu","processValues","items","querySelector","noMatchEvent","innerHTML","fragment","createDocumentFragment","_findLiTarget","movementY","collectionIndex","activeElement","placeCaretAtEnd","insertTextAtCursor","insertAtCaret","selectNodeContents","createTextRange","textRange","moveToElementText","select","deleteContents","textNode","createTextNode","insertNode","textarea","scrollPos","caretPos","front","back","content","replaceText","replaceTriggerText","newValues","concat","_append","_detach","unbind","removeAttribute","_this3","_isActive","val","matchItem"],"mappings":"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"}